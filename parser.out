Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AGRUPACION_LISTA1
    AGRUPACION_LISTA2
    LST
    PERM

Grammar

Rule 0     S' -> programa
Rule 1     programa -> conjunto
Rule 2     conjunto -> NOMBRE_PROGRAMA conjinstrucciones
Rule 3     conjunto -> NOMBRE_VACIO FUNCTION_NAME conjinstrucciones
Rule 4     conjunto -> NOMBRE_VACIO VARIABLE conjinstrucciones
Rule 5     conjunto -> FUNCTION_NAME conjinstrucciones
Rule 6     conjunto -> conjinstrucciones
Rule 7     conjunto -> VARIABLE conjinstrucciones
Rule 8     conjinstrucciones -> BEGIN bloque END
Rule 9     conjinstrucciones -> bloque END
Rule 10    conjinstrucciones -> VARIABLE bloque END
Rule 11    conjinstrucciones -> BEGIN bloque
Rule 12    conjinstrucciones -> BEGIN retorno bloque
Rule 13    conjinstrucciones -> BEGIN bloque VARIABLE
Rule 14    iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
Rule 15    iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
Rule 16    iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
Rule 17    iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
Rule 18    iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
Rule 19    funcion -> iniciofuncion bloque finfuncion
Rule 20    finfuncion -> retorno AGRUPACION_BLOQUE_EC2
Rule 21    finfuncion -> retorno
Rule 22    retorno -> BACK VARIABLE
Rule 23    retorno -> BACK NUMERO_ENTERO
Rule 24    retorno -> BACK NUMERO_REAL
Rule 25    retorno -> BACK CADENA
Rule 26    retorno -> VARIABLE
Rule 27    retorno -> NUMERO_ENTERO
Rule 28    retorno -> NUMERO_REAL
Rule 29    retorno -> CADENA
Rule 30    retorno -> VARIABLE VARIABLE
Rule 31    retorno -> VARIABLE NUMERO_ENTERO
Rule 32    retorno -> VARIABLE NUMERO_REAL
Rule 33    retorno -> VARIABLE CADENA
Rule 34    llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
Rule 35    llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2
Rule 36    llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2
Rule 37    parametrosfun -> tda VARIABLE
Rule 38    parametrosfun -> parametrosfun SEPARADOR tda VARIABLE
Rule 39    entrada -> VARIABLE
Rule 40    entrada -> NUMERO_ENTERO
Rule 41    entrada -> NUMERO_REAL
Rule 42    entrada -> CADENA
Rule 43    parametrosl -> entrada
Rule 44    parametrosl -> parametrosl SEPARADOR entrada
Rule 45    tda -> INT
Rule 46    tda -> REAL
Rule 47    tda -> CAD
Rule 48    tdadef -> INT
Rule 49    tdadef -> REAL
Rule 50    tdadef -> CAD
Rule 51    tdadef -> NULL
Rule 52    estructuracontrol -> estructuradesicion
Rule 53    estructuracontrol -> estructuraiteracion1
Rule 54    estructuracontrol -> estructuraiteracion2
Rule 55    estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 56    estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 57    estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 58    estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 59    estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 60    estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 61    estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
Rule 62    estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 63    estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 64    estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 65    estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
Rule 66    estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
Rule 67    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 68    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 69    estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 70    estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 71    estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 72    estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 73    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 74    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 75    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
Rule 76    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 77    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
Rule 78    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
Rule 79    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
Rule 80    estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
Rule 81    parametroscontrol -> tdacontrol operadorrel tdacontrol
Rule 82    parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
Rule 83    parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
Rule 84    parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
Rule 85    tdacontrol -> valor
Rule 86    tdacontrol -> VARIABLE
Rule 87    operadorlog -> Y_LOGICO
Rule 88    operadorlog -> O_LOGICO
Rule 89    operadorlog -> NEGACION
Rule 90    operadorrel -> IGUAL
Rule 91    operadorrel -> DIFERENTE
Rule 92    operadorrel -> MENOR
Rule 93    operadorrel -> MAYOR
Rule 94    operadorrel -> MAYOR_IGUAL
Rule 95    operadorrel -> MENOR_IGUAL
Rule 96    bloque -> final bloque
Rule 97    bloque -> funcion bloque
Rule 98    bloque -> estructuracontrol bloque
Rule 99    bloque -> finvac bloque
Rule 100   bloque -> retorno bloque
Rule 101   bloque -> empty
Rule 102   empty -> <empty>
Rule 103   finvac -> empty FIN
Rule 104   final -> asignacion FIN
Rule 105   final -> salidadatos FIN
Rule 106   final -> declaracion FIN
Rule 107   final -> asignacion
Rule 108   final -> salidadatos
Rule 109   final -> declaracion
Rule 110   salidadatos -> OUT expresioncad
Rule 111   salidadatos -> VARIABLE expresioncad
Rule 112   asignacion -> asignacionint
Rule 113   asignacion -> asignacionreal
Rule 114   asignacion -> asignacioncad
Rule 115   asignacion -> asignacionvar
Rule 116   asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar
Rule 117   asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion
Rule 118   asignacionint -> VARIABLE ASIGNACION_VALORES expresionint
Rule 119   asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos
Rule 120   asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal
Rule 121   asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad
Rule 122   operadorasg -> INCREMENTO
Rule 123   operadorasg -> DECREMENTO
Rule 124   declaracion -> declaracionint
Rule 125   declaracion -> declaracionreal
Rule 126   declaracion -> declaracioncad
Rule 127   declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint
Rule 128   declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar
Rule 129   declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos
Rule 130   declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion
Rule 131   declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint
Rule 132   declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
Rule 133   declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
Rule 134   declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
Rule 135   declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal
Rule 136   declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar
Rule 137   declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos
Rule 138   declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion
Rule 139   declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
Rule 140   declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad
Rule 141   declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar
Rule 142   declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos
Rule 143   declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion
Rule 144   declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
Rule 145   lecturadatos -> IN expresioncad
Rule 146   lecturadatos -> VARIABLE expresioncad
Rule 147   expresion -> expresionint
Rule 148   expresion -> expresionreal
Rule 149   expresion -> expresioncad
Rule 150   expresion -> expresionvar
Rule 151   expresionreal -> NUMERO_REAL
Rule 152   expresionreal -> expresionreal operadorar NUMERO_REAL
Rule 153   expresionreal -> expresionreal operadorar VARIABLE
Rule 154   expresionreal -> expresionvar operadorar NUMERO_REAL
Rule 155   expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2
Rule 156   expresionint -> NUMERO_ENTERO
Rule 157   expresionint -> expresionint operadorar NUMERO_ENTERO
Rule 158   expresionint -> expresionint operadorar VARIABLE
Rule 159   expresionint -> expresionvar operadorar NUMERO_ENTERO
Rule 160   expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2
Rule 161   expresioncad -> CADENA
Rule 162   expresioncad -> expresioncad SUMA CADENA
Rule 163   expresioncad -> expresioncad SUMA VARIABLE
Rule 164   expresionvar -> VARIABLE
Rule 165   expresionvar -> expresionvar operadorar VARIABLE
Rule 166   expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2
Rule 167   operadorar -> SUMA
Rule 168   operadorar -> RESTA
Rule 169   operadorar -> MULTIPLICACION1
Rule 170   operadorar -> MULTIPLICACION2
Rule 171   operadorar -> DIVISION
Rule 172   operadorar -> MODULO
Rule 173   valor -> NUMERO_ENTERO
Rule 174   valor -> NUMERO_REAL

Terminals, with rules where they appear

AGRUPACION_BLOQUE_EC1 : 14 15 16 17 55 56 57 58 59 61 62 63 64 66 67 68 68 69 70 70 71 72 72 73 73 74 74 76 77 78 79 79 80 80
AGRUPACION_BLOQUE_EC2 : 20 55 56 57 58 59 60 62 63 64 65 67 68 68 69 70 70 71 72 72 73 73 74 74 75 76 76 77 77 79 80
AGRUPACION_EC1       : 14 15 16 17 18 34 35 36 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 82 84 155 160 166
AGRUPACION_EC2       : 14 15 16 17 18 34 35 36 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 82 84 155 160 166
AGRUPACION_LISTA1    : 
AGRUPACION_LISTA2    : 
ASIGNACION_VALORES   : 116 117 118 119 120 121 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144
BACK                 : 22 23 24 25
BEGIN                : 8 11 12 13
BUT                  : 68 70 72 76 77 79 80
CAD                  : 47 50 140 141 142 143
CADENA               : 25 29 33 42 161 162
DECREMENTO           : 123
DIFERENTE            : 91
DIVISION             : 171
DO                   : 55 58 59 60 61
DURING               : 55 56 57 60 61 62 65 66
END                  : 8 9 10
FIN                  : 103 104 105 106
FUN                  : 14 17 18
FUNCTION_NAME        : 3 5 14 15 16 18 34
IF                   : 67 68 73 74 75 76 77 78 79 80
IGUAL                : 90
IN                   : 145
INCREMENTO           : 122
INT                  : 45 48 127 128 129 130
LST                  : 
MAYOR                : 93
MAYOR_IGUAL          : 94
MENOR                : 92
MENOR_IGUAL          : 95
MODULO               : 172
MULTIPLICACION1      : 169
MULTIPLICACION2      : 170
NEGACION             : 89
NOMBRE_PROGRAMA      : 2
NOMBRE_VACIO         : 3 4
NULL                 : 51
NUMERO_ENTERO        : 23 27 31 40 156 157 159 173
NUMERO_REAL          : 24 28 32 41 151 152 154 174
OUT                  : 110
O_LOGICO             : 88
PERM                 : 
REAL                 : 46 49 135 136 137 138
RESTA                : 168
SEPARADOR            : 38 44
SUMA                 : 162 163 167
VARIABLE             : 4 7 10 13 16 17 22 26 30 30 31 32 33 36 37 38 39 57 59 64 71 72 74 86 111 116 117 118 119 120 121 127 128 129 130 131 131 132 132 133 133 134 134 135 136 137 138 139 139 140 141 142 143 144 144 146 153 158 163 164 165
Y_LOGICO             : 87
error                : 

Nonterminals, with rules where they appear

asignacion           : 104 107
asignacioncad        : 114
asignacionint        : 112
asignacionreal       : 113
asignacionvar        : 115
bloque               : 8 9 10 11 12 13 19 55 56 57 58 59 60 61 62 63 64 65 66 67 68 68 69 70 70 71 72 72 73 73 74 74 75 76 76 77 77 78 79 79 80 80 96 97 98 99 100
conjinstrucciones    : 2 3 4 5 6 7
conjunto             : 1
declaracion          : 106 109
declaracioncad       : 126
declaracionint       : 124
declaracionreal      : 125
empty                : 101 103
entrada              : 43 44
estructuracontrol    : 98
estructuradesicion   : 52
estructuraiteracion1 : 53
estructuraiteracion2 : 54
expresion            : 
expresioncad         : 110 111 121 140 144 145 146 149 162 163
expresionint         : 118 127 131 147 157 158 160
expresionreal        : 120 135 139 148 152 153 155
expresionvar         : 116 128 132 136 141 150 154 159 165 166
final                : 96
finfuncion           : 19
finvac               : 99
funcion              : 97
iniciofuncion        : 19
lecturadatos         : 119 129 133 137 142
llamadafuncion       : 117 130 134 138 143
operadorar           : 152 153 154 157 158 159 165
operadorasg          : 
operadorlog          : 83 84
operadorrel          : 81 82 83 84
parametroscontrol    : 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 83 84
parametrosfun        : 14 15 16 17 18 38
parametrosl          : 34 35 36 44
programa             : 0
retorno              : 12 20 21 100
salidadatos          : 105 108
tda                  : 37 38
tdacontrol           : 81 81 82 82 83 83 84 84
tdadef               : 14 15 16 17 18
valor                : 85

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . conjunto
    (2) conjunto -> . NOMBRE_PROGRAMA conjinstrucciones
    (3) conjunto -> . NOMBRE_VACIO FUNCTION_NAME conjinstrucciones
    (4) conjunto -> . NOMBRE_VACIO VARIABLE conjinstrucciones
    (5) conjunto -> . FUNCTION_NAME conjinstrucciones
    (6) conjunto -> . conjinstrucciones
    (7) conjunto -> . VARIABLE conjinstrucciones
    (8) conjinstrucciones -> . BEGIN bloque END
    (9) conjinstrucciones -> . bloque END
    (10) conjinstrucciones -> . VARIABLE bloque END
    (11) conjinstrucciones -> . BEGIN bloque
    (12) conjinstrucciones -> . BEGIN retorno bloque
    (13) conjinstrucciones -> . BEGIN bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    NOMBRE_PROGRAMA shift and go to state 3
    NOMBRE_VACIO    shift and go to state 5
    FUNCTION_NAME   shift and go to state 6
    VARIABLE        shift and go to state 7
    BEGIN           shift and go to state 8
    BACK            shift and go to state 23
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    programa                       shift and go to state 1
    conjunto                       shift and go to state 2
    conjinstrucciones              shift and go to state 4
    bloque                         shift and go to state 9
    retorno                        shift and go to state 10
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 1

    (0) S' -> programa .



state 2

    (1) programa -> conjunto .

    $end            reduce using rule 1 (programa -> conjunto .)


state 3

    (2) conjunto -> NOMBRE_PROGRAMA . conjinstrucciones
    (8) conjinstrucciones -> . BEGIN bloque END
    (9) conjinstrucciones -> . bloque END
    (10) conjinstrucciones -> . VARIABLE bloque END
    (11) conjinstrucciones -> . BEGIN bloque
    (12) conjinstrucciones -> . BEGIN retorno bloque
    (13) conjinstrucciones -> . BEGIN bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BEGIN           shift and go to state 8
    VARIABLE        shift and go to state 47
    BACK            shift and go to state 23
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    conjinstrucciones              shift and go to state 46
    bloque                         shift and go to state 9
    retorno                        shift and go to state 10
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 4

    (6) conjunto -> conjinstrucciones .

    $end            reduce using rule 6 (conjunto -> conjinstrucciones .)


state 5

    (3) conjunto -> NOMBRE_VACIO . FUNCTION_NAME conjinstrucciones
    (4) conjunto -> NOMBRE_VACIO . VARIABLE conjinstrucciones

    FUNCTION_NAME   shift and go to state 48
    VARIABLE        shift and go to state 49


state 6

    (5) conjunto -> FUNCTION_NAME . conjinstrucciones
    (8) conjinstrucciones -> . BEGIN bloque END
    (9) conjinstrucciones -> . bloque END
    (10) conjinstrucciones -> . VARIABLE bloque END
    (11) conjinstrucciones -> . BEGIN bloque
    (12) conjinstrucciones -> . BEGIN retorno bloque
    (13) conjinstrucciones -> . BEGIN bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BEGIN           shift and go to state 8
    VARIABLE        shift and go to state 47
    BACK            shift and go to state 23
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    conjinstrucciones              shift and go to state 50
    bloque                         shift and go to state 9
    retorno                        shift and go to state 10
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 7

    (7) conjunto -> VARIABLE . conjinstrucciones
    (10) conjinstrucciones -> VARIABLE . bloque END
    (26) retorno -> VARIABLE .
    (30) retorno -> VARIABLE . VARIABLE
    (31) retorno -> VARIABLE . NUMERO_ENTERO
    (32) retorno -> VARIABLE . NUMERO_REAL
    (33) retorno -> VARIABLE . CADENA
    (111) salidadatos -> VARIABLE . expresioncad
    (16) iniciofuncion -> VARIABLE . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (71) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (57) estructuraiteracion2 -> VARIABLE . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> VARIABLE . ASIGNACION_VALORES expresionint
    (119) asignacionint -> VARIABLE . ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> VARIABLE . ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> VARIABLE . ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> VARIABLE . ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> VARIABLE . ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE . VARIABLE ASIGNACION_VALORES expresioncad
    (8) conjinstrucciones -> . BEGIN bloque END
    (9) conjinstrucciones -> . bloque END
    (10) conjinstrucciones -> . VARIABLE bloque END
    (11) conjinstrucciones -> . BEGIN bloque
    (12) conjinstrucciones -> . BEGIN retorno bloque
    (13) conjinstrucciones -> . BEGIN bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 26 (retorno -> VARIABLE .)
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    FIN             reduce using rule 26 (retorno -> VARIABLE .)
    END             reduce using rule 26 (retorno -> VARIABLE .)
    VARIABLE        shift and go to state 51
    NUMERO_ENTERO   shift and go to state 54
    NUMERO_REAL     shift and go to state 55
    CADENA          shift and go to state 56
    AGRUPACION_EC1  shift and go to state 59
    AGRUPACION_BLOQUE_EC1 shift and go to state 60
    ASIGNACION_VALORES shift and go to state 61
    BEGIN           shift and go to state 8
    INT             shift and go to state 62
    REAL            shift and go to state 63
    CAD             shift and go to state 64
    NULL            shift and go to state 45
    BACK            shift and go to state 23
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    DURING          shift and go to state 40
    DO              shift and go to state 41

  ! BACK            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CADENA          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! OUT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! FUN             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! IF              [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! DURING          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! DO              [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! INT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! REAL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CAD             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NULL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! FIN             [ reduce using rule 102 (empty -> .) ]
  ! END             [ reduce using rule 102 (empty -> .) ]

    conjinstrucciones              shift and go to state 52
    bloque                         shift and go to state 53
    expresioncad                   shift and go to state 57
    tdadef                         shift and go to state 58
    retorno                        shift and go to state 10
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34

state 8

    (8) conjinstrucciones -> BEGIN . bloque END
    (11) conjinstrucciones -> BEGIN . bloque
    (12) conjinstrucciones -> BEGIN . retorno bloque
    (13) conjinstrucciones -> BEGIN . bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]

    bloque                         shift and go to state 65
    retorno                        shift and go to state 66
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 9

    (9) conjinstrucciones -> bloque . END

    END             shift and go to state 68


state 10

    (100) bloque -> retorno . bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    retorno                        shift and go to state 10
    bloque                         shift and go to state 69
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 11

    (96) bloque -> final . bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    final                          shift and go to state 11
    bloque                         shift and go to state 70
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 12

    (97) bloque -> funcion . bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    funcion                        shift and go to state 12
    bloque                         shift and go to state 71
    final                          shift and go to state 11
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 13

    (98) bloque -> estructuracontrol . bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    estructuracontrol              shift and go to state 13
    bloque                         shift and go to state 72
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 14

    (99) bloque -> finvac . bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    finvac                         shift and go to state 14
    bloque                         shift and go to state 73
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 15

    (101) bloque -> empty .
    (103) finvac -> empty . FIN

  ! shift/reduce conflict for FIN resolved as shift
    END             reduce using rule 101 (bloque -> empty .)
    VARIABLE        reduce using rule 101 (bloque -> empty .)
    $end            reduce using rule 101 (bloque -> empty .)
    BACK            reduce using rule 101 (bloque -> empty .)
    NUMERO_ENTERO   reduce using rule 101 (bloque -> empty .)
    NUMERO_REAL     reduce using rule 101 (bloque -> empty .)
    CADENA          reduce using rule 101 (bloque -> empty .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 101 (bloque -> empty .)
    DURING          reduce using rule 101 (bloque -> empty .)
    BUT             reduce using rule 101 (bloque -> empty .)
    OUT             reduce using rule 101 (bloque -> empty .)
    FUN             reduce using rule 101 (bloque -> empty .)
    IF              reduce using rule 101 (bloque -> empty .)
    AGRUPACION_EC1  reduce using rule 101 (bloque -> empty .)
    DO              reduce using rule 101 (bloque -> empty .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 101 (bloque -> empty .)
    INT             reduce using rule 101 (bloque -> empty .)
    REAL            reduce using rule 101 (bloque -> empty .)
    CAD             reduce using rule 101 (bloque -> empty .)
    NULL            reduce using rule 101 (bloque -> empty .)
    FIN             shift and go to state 74

  ! FIN             [ reduce using rule 101 (bloque -> empty .) ]


state 16

    (104) final -> asignacion . FIN
    (107) final -> asignacion .

  ! shift/reduce conflict for FIN resolved as shift
    FIN             shift and go to state 75
    BACK            reduce using rule 107 (final -> asignacion .)
    VARIABLE        reduce using rule 107 (final -> asignacion .)
    NUMERO_ENTERO   reduce using rule 107 (final -> asignacion .)
    NUMERO_REAL     reduce using rule 107 (final -> asignacion .)
    CADENA          reduce using rule 107 (final -> asignacion .)
    OUT             reduce using rule 107 (final -> asignacion .)
    FUN             reduce using rule 107 (final -> asignacion .)
    IF              reduce using rule 107 (final -> asignacion .)
    AGRUPACION_EC1  reduce using rule 107 (final -> asignacion .)
    DURING          reduce using rule 107 (final -> asignacion .)
    DO              reduce using rule 107 (final -> asignacion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 107 (final -> asignacion .)
    INT             reduce using rule 107 (final -> asignacion .)
    REAL            reduce using rule 107 (final -> asignacion .)
    CAD             reduce using rule 107 (final -> asignacion .)
    NULL            reduce using rule 107 (final -> asignacion .)
    END             reduce using rule 107 (final -> asignacion .)
    $end            reduce using rule 107 (final -> asignacion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 107 (final -> asignacion .)
    BUT             reduce using rule 107 (final -> asignacion .)

  ! FIN             [ reduce using rule 107 (final -> asignacion .) ]


state 17

    (105) final -> salidadatos . FIN
    (108) final -> salidadatos .

  ! shift/reduce conflict for FIN resolved as shift
    FIN             shift and go to state 76
    BACK            reduce using rule 108 (final -> salidadatos .)
    VARIABLE        reduce using rule 108 (final -> salidadatos .)
    NUMERO_ENTERO   reduce using rule 108 (final -> salidadatos .)
    NUMERO_REAL     reduce using rule 108 (final -> salidadatos .)
    CADENA          reduce using rule 108 (final -> salidadatos .)
    OUT             reduce using rule 108 (final -> salidadatos .)
    FUN             reduce using rule 108 (final -> salidadatos .)
    IF              reduce using rule 108 (final -> salidadatos .)
    AGRUPACION_EC1  reduce using rule 108 (final -> salidadatos .)
    DURING          reduce using rule 108 (final -> salidadatos .)
    DO              reduce using rule 108 (final -> salidadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 108 (final -> salidadatos .)
    INT             reduce using rule 108 (final -> salidadatos .)
    REAL            reduce using rule 108 (final -> salidadatos .)
    CAD             reduce using rule 108 (final -> salidadatos .)
    NULL            reduce using rule 108 (final -> salidadatos .)
    END             reduce using rule 108 (final -> salidadatos .)
    $end            reduce using rule 108 (final -> salidadatos .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 108 (final -> salidadatos .)
    BUT             reduce using rule 108 (final -> salidadatos .)

  ! FIN             [ reduce using rule 108 (final -> salidadatos .) ]


state 18

    (106) final -> declaracion . FIN
    (109) final -> declaracion .

  ! shift/reduce conflict for FIN resolved as shift
    FIN             shift and go to state 77
    BACK            reduce using rule 109 (final -> declaracion .)
    VARIABLE        reduce using rule 109 (final -> declaracion .)
    NUMERO_ENTERO   reduce using rule 109 (final -> declaracion .)
    NUMERO_REAL     reduce using rule 109 (final -> declaracion .)
    CADENA          reduce using rule 109 (final -> declaracion .)
    OUT             reduce using rule 109 (final -> declaracion .)
    FUN             reduce using rule 109 (final -> declaracion .)
    IF              reduce using rule 109 (final -> declaracion .)
    AGRUPACION_EC1  reduce using rule 109 (final -> declaracion .)
    DURING          reduce using rule 109 (final -> declaracion .)
    DO              reduce using rule 109 (final -> declaracion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 109 (final -> declaracion .)
    INT             reduce using rule 109 (final -> declaracion .)
    REAL            reduce using rule 109 (final -> declaracion .)
    CAD             reduce using rule 109 (final -> declaracion .)
    NULL            reduce using rule 109 (final -> declaracion .)
    END             reduce using rule 109 (final -> declaracion .)
    $end            reduce using rule 109 (final -> declaracion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 109 (final -> declaracion .)
    BUT             reduce using rule 109 (final -> declaracion .)

  ! FIN             [ reduce using rule 109 (final -> declaracion .) ]


state 19

    (19) funcion -> iniciofuncion . bloque finfuncion
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]

    iniciofuncion                  shift and go to state 19
    bloque                         shift and go to state 78
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 20

    (52) estructuracontrol -> estructuradesicion .

    BACK            reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    VARIABLE        reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    NUMERO_ENTERO   reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    NUMERO_REAL     reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    CADENA          reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    OUT             reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    FUN             reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    IF              reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    AGRUPACION_EC1  reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    DURING          reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    DO              reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    INT             reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    REAL            reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    CAD             reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    NULL            reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    FIN             reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    END             reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    $end            reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 52 (estructuracontrol -> estructuradesicion .)
    BUT             reduce using rule 52 (estructuracontrol -> estructuradesicion .)


state 21

    (53) estructuracontrol -> estructuraiteracion1 .

    BACK            reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    VARIABLE        reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    NUMERO_ENTERO   reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    NUMERO_REAL     reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    CADENA          reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    OUT             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    FUN             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    IF              reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    AGRUPACION_EC1  reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    DURING          reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    DO              reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    INT             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    REAL            reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    CAD             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    NULL            reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    FIN             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    END             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    $end            reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)
    BUT             reduce using rule 53 (estructuracontrol -> estructuraiteracion1 .)


state 22

    (54) estructuracontrol -> estructuraiteracion2 .

    BACK            reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    VARIABLE        reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    NUMERO_ENTERO   reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    NUMERO_REAL     reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    CADENA          reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    OUT             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    FUN             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    IF              reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    AGRUPACION_EC1  reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    DURING          reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    DO              reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    INT             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    REAL            reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    CAD             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    NULL            reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    FIN             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    END             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    $end            reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)
    BUT             reduce using rule 54 (estructuracontrol -> estructuraiteracion2 .)


state 23

    (22) retorno -> BACK . VARIABLE
    (23) retorno -> BACK . NUMERO_ENTERO
    (24) retorno -> BACK . NUMERO_REAL
    (25) retorno -> BACK . CADENA

    VARIABLE        shift and go to state 79
    NUMERO_ENTERO   shift and go to state 80
    NUMERO_REAL     shift and go to state 81
    CADENA          shift and go to state 82


state 24

    (27) retorno -> NUMERO_ENTERO .

    BACK            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    VARIABLE        reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    CADENA          reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    OUT             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    FUN             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    IF              reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    DURING          reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    DO              reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    INT             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    REAL            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    CAD             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    NULL            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    FIN             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    END             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    $end            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    BUT             reduce using rule 27 (retorno -> NUMERO_ENTERO .)


state 25

    (28) retorno -> NUMERO_REAL .

    BACK            reduce using rule 28 (retorno -> NUMERO_REAL .)
    VARIABLE        reduce using rule 28 (retorno -> NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 28 (retorno -> NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 28 (retorno -> NUMERO_REAL .)
    CADENA          reduce using rule 28 (retorno -> NUMERO_REAL .)
    OUT             reduce using rule 28 (retorno -> NUMERO_REAL .)
    FUN             reduce using rule 28 (retorno -> NUMERO_REAL .)
    IF              reduce using rule 28 (retorno -> NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 28 (retorno -> NUMERO_REAL .)
    DURING          reduce using rule 28 (retorno -> NUMERO_REAL .)
    DO              reduce using rule 28 (retorno -> NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 28 (retorno -> NUMERO_REAL .)
    INT             reduce using rule 28 (retorno -> NUMERO_REAL .)
    REAL            reduce using rule 28 (retorno -> NUMERO_REAL .)
    CAD             reduce using rule 28 (retorno -> NUMERO_REAL .)
    NULL            reduce using rule 28 (retorno -> NUMERO_REAL .)
    FIN             reduce using rule 28 (retorno -> NUMERO_REAL .)
    END             reduce using rule 28 (retorno -> NUMERO_REAL .)
    $end            reduce using rule 28 (retorno -> NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 28 (retorno -> NUMERO_REAL .)
    BUT             reduce using rule 28 (retorno -> NUMERO_REAL .)


state 26

    (29) retorno -> CADENA .

    BACK            reduce using rule 29 (retorno -> CADENA .)
    VARIABLE        reduce using rule 29 (retorno -> CADENA .)
    NUMERO_ENTERO   reduce using rule 29 (retorno -> CADENA .)
    NUMERO_REAL     reduce using rule 29 (retorno -> CADENA .)
    CADENA          reduce using rule 29 (retorno -> CADENA .)
    OUT             reduce using rule 29 (retorno -> CADENA .)
    FUN             reduce using rule 29 (retorno -> CADENA .)
    IF              reduce using rule 29 (retorno -> CADENA .)
    AGRUPACION_EC1  reduce using rule 29 (retorno -> CADENA .)
    DURING          reduce using rule 29 (retorno -> CADENA .)
    DO              reduce using rule 29 (retorno -> CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 29 (retorno -> CADENA .)
    INT             reduce using rule 29 (retorno -> CADENA .)
    REAL            reduce using rule 29 (retorno -> CADENA .)
    CAD             reduce using rule 29 (retorno -> CADENA .)
    NULL            reduce using rule 29 (retorno -> CADENA .)
    FIN             reduce using rule 29 (retorno -> CADENA .)
    END             reduce using rule 29 (retorno -> CADENA .)
    $end            reduce using rule 29 (retorno -> CADENA .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 29 (retorno -> CADENA .)
    BUT             reduce using rule 29 (retorno -> CADENA .)


state 27

    (112) asignacion -> asignacionint .

    FIN             reduce using rule 112 (asignacion -> asignacionint .)
    BACK            reduce using rule 112 (asignacion -> asignacionint .)
    VARIABLE        reduce using rule 112 (asignacion -> asignacionint .)
    NUMERO_ENTERO   reduce using rule 112 (asignacion -> asignacionint .)
    NUMERO_REAL     reduce using rule 112 (asignacion -> asignacionint .)
    CADENA          reduce using rule 112 (asignacion -> asignacionint .)
    OUT             reduce using rule 112 (asignacion -> asignacionint .)
    FUN             reduce using rule 112 (asignacion -> asignacionint .)
    IF              reduce using rule 112 (asignacion -> asignacionint .)
    AGRUPACION_EC1  reduce using rule 112 (asignacion -> asignacionint .)
    DURING          reduce using rule 112 (asignacion -> asignacionint .)
    DO              reduce using rule 112 (asignacion -> asignacionint .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 112 (asignacion -> asignacionint .)
    INT             reduce using rule 112 (asignacion -> asignacionint .)
    REAL            reduce using rule 112 (asignacion -> asignacionint .)
    CAD             reduce using rule 112 (asignacion -> asignacionint .)
    NULL            reduce using rule 112 (asignacion -> asignacionint .)
    END             reduce using rule 112 (asignacion -> asignacionint .)
    $end            reduce using rule 112 (asignacion -> asignacionint .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 112 (asignacion -> asignacionint .)
    BUT             reduce using rule 112 (asignacion -> asignacionint .)


state 28

    (113) asignacion -> asignacionreal .

    FIN             reduce using rule 113 (asignacion -> asignacionreal .)
    BACK            reduce using rule 113 (asignacion -> asignacionreal .)
    VARIABLE        reduce using rule 113 (asignacion -> asignacionreal .)
    NUMERO_ENTERO   reduce using rule 113 (asignacion -> asignacionreal .)
    NUMERO_REAL     reduce using rule 113 (asignacion -> asignacionreal .)
    CADENA          reduce using rule 113 (asignacion -> asignacionreal .)
    OUT             reduce using rule 113 (asignacion -> asignacionreal .)
    FUN             reduce using rule 113 (asignacion -> asignacionreal .)
    IF              reduce using rule 113 (asignacion -> asignacionreal .)
    AGRUPACION_EC1  reduce using rule 113 (asignacion -> asignacionreal .)
    DURING          reduce using rule 113 (asignacion -> asignacionreal .)
    DO              reduce using rule 113 (asignacion -> asignacionreal .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 113 (asignacion -> asignacionreal .)
    INT             reduce using rule 113 (asignacion -> asignacionreal .)
    REAL            reduce using rule 113 (asignacion -> asignacionreal .)
    CAD             reduce using rule 113 (asignacion -> asignacionreal .)
    NULL            reduce using rule 113 (asignacion -> asignacionreal .)
    END             reduce using rule 113 (asignacion -> asignacionreal .)
    $end            reduce using rule 113 (asignacion -> asignacionreal .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 113 (asignacion -> asignacionreal .)
    BUT             reduce using rule 113 (asignacion -> asignacionreal .)


state 29

    (114) asignacion -> asignacioncad .

    FIN             reduce using rule 114 (asignacion -> asignacioncad .)
    BACK            reduce using rule 114 (asignacion -> asignacioncad .)
    VARIABLE        reduce using rule 114 (asignacion -> asignacioncad .)
    NUMERO_ENTERO   reduce using rule 114 (asignacion -> asignacioncad .)
    NUMERO_REAL     reduce using rule 114 (asignacion -> asignacioncad .)
    CADENA          reduce using rule 114 (asignacion -> asignacioncad .)
    OUT             reduce using rule 114 (asignacion -> asignacioncad .)
    FUN             reduce using rule 114 (asignacion -> asignacioncad .)
    IF              reduce using rule 114 (asignacion -> asignacioncad .)
    AGRUPACION_EC1  reduce using rule 114 (asignacion -> asignacioncad .)
    DURING          reduce using rule 114 (asignacion -> asignacioncad .)
    DO              reduce using rule 114 (asignacion -> asignacioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 114 (asignacion -> asignacioncad .)
    INT             reduce using rule 114 (asignacion -> asignacioncad .)
    REAL            reduce using rule 114 (asignacion -> asignacioncad .)
    CAD             reduce using rule 114 (asignacion -> asignacioncad .)
    NULL            reduce using rule 114 (asignacion -> asignacioncad .)
    END             reduce using rule 114 (asignacion -> asignacioncad .)
    $end            reduce using rule 114 (asignacion -> asignacioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 114 (asignacion -> asignacioncad .)
    BUT             reduce using rule 114 (asignacion -> asignacioncad .)


state 30

    (115) asignacion -> asignacionvar .

    FIN             reduce using rule 115 (asignacion -> asignacionvar .)
    BACK            reduce using rule 115 (asignacion -> asignacionvar .)
    VARIABLE        reduce using rule 115 (asignacion -> asignacionvar .)
    NUMERO_ENTERO   reduce using rule 115 (asignacion -> asignacionvar .)
    NUMERO_REAL     reduce using rule 115 (asignacion -> asignacionvar .)
    CADENA          reduce using rule 115 (asignacion -> asignacionvar .)
    OUT             reduce using rule 115 (asignacion -> asignacionvar .)
    FUN             reduce using rule 115 (asignacion -> asignacionvar .)
    IF              reduce using rule 115 (asignacion -> asignacionvar .)
    AGRUPACION_EC1  reduce using rule 115 (asignacion -> asignacionvar .)
    DURING          reduce using rule 115 (asignacion -> asignacionvar .)
    DO              reduce using rule 115 (asignacion -> asignacionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 115 (asignacion -> asignacionvar .)
    INT             reduce using rule 115 (asignacion -> asignacionvar .)
    REAL            reduce using rule 115 (asignacion -> asignacionvar .)
    CAD             reduce using rule 115 (asignacion -> asignacionvar .)
    NULL            reduce using rule 115 (asignacion -> asignacionvar .)
    END             reduce using rule 115 (asignacion -> asignacionvar .)
    $end            reduce using rule 115 (asignacion -> asignacionvar .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 115 (asignacion -> asignacionvar .)
    BUT             reduce using rule 115 (asignacion -> asignacionvar .)


state 31

    (110) salidadatos -> OUT . expresioncad
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE

    CADENA          shift and go to state 84

    expresioncad                   shift and go to state 83

state 32

    (124) declaracion -> declaracionint .

    FIN             reduce using rule 124 (declaracion -> declaracionint .)
    BACK            reduce using rule 124 (declaracion -> declaracionint .)
    VARIABLE        reduce using rule 124 (declaracion -> declaracionint .)
    NUMERO_ENTERO   reduce using rule 124 (declaracion -> declaracionint .)
    NUMERO_REAL     reduce using rule 124 (declaracion -> declaracionint .)
    CADENA          reduce using rule 124 (declaracion -> declaracionint .)
    OUT             reduce using rule 124 (declaracion -> declaracionint .)
    FUN             reduce using rule 124 (declaracion -> declaracionint .)
    IF              reduce using rule 124 (declaracion -> declaracionint .)
    AGRUPACION_EC1  reduce using rule 124 (declaracion -> declaracionint .)
    DURING          reduce using rule 124 (declaracion -> declaracionint .)
    DO              reduce using rule 124 (declaracion -> declaracionint .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 124 (declaracion -> declaracionint .)
    INT             reduce using rule 124 (declaracion -> declaracionint .)
    REAL            reduce using rule 124 (declaracion -> declaracionint .)
    CAD             reduce using rule 124 (declaracion -> declaracionint .)
    NULL            reduce using rule 124 (declaracion -> declaracionint .)
    END             reduce using rule 124 (declaracion -> declaracionint .)
    $end            reduce using rule 124 (declaracion -> declaracionint .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 124 (declaracion -> declaracionint .)
    BUT             reduce using rule 124 (declaracion -> declaracionint .)


state 33

    (125) declaracion -> declaracionreal .

    FIN             reduce using rule 125 (declaracion -> declaracionreal .)
    BACK            reduce using rule 125 (declaracion -> declaracionreal .)
    VARIABLE        reduce using rule 125 (declaracion -> declaracionreal .)
    NUMERO_ENTERO   reduce using rule 125 (declaracion -> declaracionreal .)
    NUMERO_REAL     reduce using rule 125 (declaracion -> declaracionreal .)
    CADENA          reduce using rule 125 (declaracion -> declaracionreal .)
    OUT             reduce using rule 125 (declaracion -> declaracionreal .)
    FUN             reduce using rule 125 (declaracion -> declaracionreal .)
    IF              reduce using rule 125 (declaracion -> declaracionreal .)
    AGRUPACION_EC1  reduce using rule 125 (declaracion -> declaracionreal .)
    DURING          reduce using rule 125 (declaracion -> declaracionreal .)
    DO              reduce using rule 125 (declaracion -> declaracionreal .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 125 (declaracion -> declaracionreal .)
    INT             reduce using rule 125 (declaracion -> declaracionreal .)
    REAL            reduce using rule 125 (declaracion -> declaracionreal .)
    CAD             reduce using rule 125 (declaracion -> declaracionreal .)
    NULL            reduce using rule 125 (declaracion -> declaracionreal .)
    END             reduce using rule 125 (declaracion -> declaracionreal .)
    $end            reduce using rule 125 (declaracion -> declaracionreal .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 125 (declaracion -> declaracionreal .)
    BUT             reduce using rule 125 (declaracion -> declaracionreal .)


state 34

    (126) declaracion -> declaracioncad .

    FIN             reduce using rule 126 (declaracion -> declaracioncad .)
    BACK            reduce using rule 126 (declaracion -> declaracioncad .)
    VARIABLE        reduce using rule 126 (declaracion -> declaracioncad .)
    NUMERO_ENTERO   reduce using rule 126 (declaracion -> declaracioncad .)
    NUMERO_REAL     reduce using rule 126 (declaracion -> declaracioncad .)
    CADENA          reduce using rule 126 (declaracion -> declaracioncad .)
    OUT             reduce using rule 126 (declaracion -> declaracioncad .)
    FUN             reduce using rule 126 (declaracion -> declaracioncad .)
    IF              reduce using rule 126 (declaracion -> declaracioncad .)
    AGRUPACION_EC1  reduce using rule 126 (declaracion -> declaracioncad .)
    DURING          reduce using rule 126 (declaracion -> declaracioncad .)
    DO              reduce using rule 126 (declaracion -> declaracioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 126 (declaracion -> declaracioncad .)
    INT             reduce using rule 126 (declaracion -> declaracioncad .)
    REAL            reduce using rule 126 (declaracion -> declaracioncad .)
    CAD             reduce using rule 126 (declaracion -> declaracioncad .)
    NULL            reduce using rule 126 (declaracion -> declaracioncad .)
    END             reduce using rule 126 (declaracion -> declaracioncad .)
    $end            reduce using rule 126 (declaracion -> declaracioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 126 (declaracion -> declaracioncad .)
    BUT             reduce using rule 126 (declaracion -> declaracioncad .)


state 35

    (14) iniciofuncion -> FUN . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> FUN . tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> FUN . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    INT             shift and go to state 86
    REAL            shift and go to state 87
    CAD             shift and go to state 88
    NULL            shift and go to state 45

    tdadef                         shift and go to state 85

state 36

    (15) iniciofuncion -> tdadef . FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    FUNCTION_NAME   shift and go to state 89


state 37

    (69) estructuradesicion -> AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 91
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 38

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 97
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 39

    (67) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque

    AGRUPACION_EC1  shift and go to state 98


state 40

    (62) estructuraiteracion1 -> DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque

    AGRUPACION_EC1  shift and go to state 99


state 41

    (55) estructuraiteracion2 -> DO . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> DO . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> DO . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> DO . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> DO . AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    AGRUPACION_BLOQUE_EC1 shift and go to state 100
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 101
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 42

    (127) declaracionint -> INT . VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> INT . VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> INT . VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> INT . VARIABLE ASIGNACION_VALORES llamadafuncion
    (48) tdadef -> INT .

    VARIABLE        shift and go to state 102
    FUNCTION_NAME   reduce using rule 48 (tdadef -> INT .)


state 43

    (135) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES llamadafuncion
    (49) tdadef -> REAL .

    VARIABLE        shift and go to state 103
    FUNCTION_NAME   reduce using rule 49 (tdadef -> REAL .)


state 44

    (140) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES llamadafuncion
    (50) tdadef -> CAD .

    VARIABLE        shift and go to state 104
    FUNCTION_NAME   reduce using rule 50 (tdadef -> CAD .)


state 45

    (51) tdadef -> NULL .

    FUNCTION_NAME   reduce using rule 51 (tdadef -> NULL .)
    VARIABLE        reduce using rule 51 (tdadef -> NULL .)


state 46

    (2) conjunto -> NOMBRE_PROGRAMA conjinstrucciones .

    $end            reduce using rule 2 (conjunto -> NOMBRE_PROGRAMA conjinstrucciones .)


state 47

    (10) conjinstrucciones -> VARIABLE . bloque END
    (26) retorno -> VARIABLE .
    (30) retorno -> VARIABLE . VARIABLE
    (31) retorno -> VARIABLE . NUMERO_ENTERO
    (32) retorno -> VARIABLE . NUMERO_REAL
    (33) retorno -> VARIABLE . CADENA
    (111) salidadatos -> VARIABLE . expresioncad
    (16) iniciofuncion -> VARIABLE . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (71) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (57) estructuraiteracion2 -> VARIABLE . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> VARIABLE . ASIGNACION_VALORES expresionint
    (119) asignacionint -> VARIABLE . ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> VARIABLE . ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> VARIABLE . ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> VARIABLE . ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> VARIABLE . ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE . VARIABLE ASIGNACION_VALORES expresioncad
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 26 (retorno -> VARIABLE .)
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    FIN             reduce using rule 26 (retorno -> VARIABLE .)
    END             reduce using rule 26 (retorno -> VARIABLE .)
    VARIABLE        shift and go to state 105
    NUMERO_ENTERO   shift and go to state 54
    NUMERO_REAL     shift and go to state 55
    CADENA          shift and go to state 56
    AGRUPACION_EC1  shift and go to state 59
    AGRUPACION_BLOQUE_EC1 shift and go to state 60
    ASIGNACION_VALORES shift and go to state 61
    INT             shift and go to state 62
    REAL            shift and go to state 63
    CAD             shift and go to state 64
    NULL            shift and go to state 45
    BACK            shift and go to state 23
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    DURING          shift and go to state 40
    DO              shift and go to state 41

  ! BACK            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CADENA          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! OUT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! FUN             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! IF              [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! DURING          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! DO              [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! INT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! REAL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CAD             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NULL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! FIN             [ reduce using rule 102 (empty -> .) ]
  ! END             [ reduce using rule 102 (empty -> .) ]

    bloque                         shift and go to state 106
    expresioncad                   shift and go to state 57
    tdadef                         shift and go to state 58
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34

state 48

    (3) conjunto -> NOMBRE_VACIO FUNCTION_NAME . conjinstrucciones
    (8) conjinstrucciones -> . BEGIN bloque END
    (9) conjinstrucciones -> . bloque END
    (10) conjinstrucciones -> . VARIABLE bloque END
    (11) conjinstrucciones -> . BEGIN bloque
    (12) conjinstrucciones -> . BEGIN retorno bloque
    (13) conjinstrucciones -> . BEGIN bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BEGIN           shift and go to state 8
    VARIABLE        shift and go to state 47
    BACK            shift and go to state 23
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    conjinstrucciones              shift and go to state 107
    bloque                         shift and go to state 9
    retorno                        shift and go to state 10
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 49

    (4) conjunto -> NOMBRE_VACIO VARIABLE . conjinstrucciones
    (8) conjinstrucciones -> . BEGIN bloque END
    (9) conjinstrucciones -> . bloque END
    (10) conjinstrucciones -> . VARIABLE bloque END
    (11) conjinstrucciones -> . BEGIN bloque
    (12) conjinstrucciones -> . BEGIN retorno bloque
    (13) conjinstrucciones -> . BEGIN bloque VARIABLE
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BEGIN           shift and go to state 8
    VARIABLE        shift and go to state 47
    BACK            shift and go to state 23
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    conjinstrucciones              shift and go to state 108
    bloque                         shift and go to state 9
    retorno                        shift and go to state 10
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 50

    (5) conjunto -> FUNCTION_NAME conjinstrucciones .

    $end            reduce using rule 5 (conjunto -> FUNCTION_NAME conjinstrucciones .)


state 51

    (30) retorno -> VARIABLE VARIABLE .
    (131) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE VARIABLE . ASIGNACION_VALORES expresioncad
    (10) conjinstrucciones -> VARIABLE . bloque END
    (26) retorno -> VARIABLE .
    (30) retorno -> VARIABLE . VARIABLE
    (31) retorno -> VARIABLE . NUMERO_ENTERO
    (32) retorno -> VARIABLE . NUMERO_REAL
    (33) retorno -> VARIABLE . CADENA
    (111) salidadatos -> VARIABLE . expresioncad
    (16) iniciofuncion -> VARIABLE . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (71) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (57) estructuraiteracion2 -> VARIABLE . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> VARIABLE . ASIGNACION_VALORES expresionint
    (119) asignacionint -> VARIABLE . ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> VARIABLE . ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> VARIABLE . ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> VARIABLE . ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> VARIABLE . ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE . VARIABLE ASIGNACION_VALORES expresioncad
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad

  ! reduce/reduce conflict for BACK resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for CADENA resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for OUT resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for FUN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for DURING resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for REAL resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for CAD resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for NULL resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for FIN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 26 (retorno -> VARIABLE .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 26 (retorno -> VARIABLE .)
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    ASIGNACION_VALORES shift and go to state 109
    FIN             reduce using rule 26 (retorno -> VARIABLE .)
    END             reduce using rule 26 (retorno -> VARIABLE .)
    VARIABLE        shift and go to state 105
    NUMERO_ENTERO   shift and go to state 54
    NUMERO_REAL     shift and go to state 55
    CADENA          shift and go to state 56
    AGRUPACION_EC1  shift and go to state 59
    AGRUPACION_BLOQUE_EC1 shift and go to state 60
    INT             shift and go to state 62
    REAL            shift and go to state 63
    CAD             shift and go to state 64
    NULL            shift and go to state 45
    BACK            shift and go to state 23
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    DURING          shift and go to state 40
    DO              shift and go to state 41

  ! BACK            [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! CADENA          [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! OUT             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! FUN             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! IF              [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! DURING          [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! DO              [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! INT             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! REAL            [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! CAD             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! NULL            [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! FIN             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! END             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! BACK            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CADENA          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! OUT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! FUN             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! IF              [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! DURING          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! DO              [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! INT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! REAL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CAD             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NULL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! FIN             [ reduce using rule 102 (empty -> .) ]
  ! END             [ reduce using rule 102 (empty -> .) ]

    expresioncad                   shift and go to state 57
    bloque                         shift and go to state 106
    tdadef                         shift and go to state 58
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34

state 52

    (7) conjunto -> VARIABLE conjinstrucciones .

    $end            reduce using rule 7 (conjunto -> VARIABLE conjinstrucciones .)


state 53

    (10) conjinstrucciones -> VARIABLE bloque . END
    (9) conjinstrucciones -> bloque . END

    END             shift and go to state 110


state 54

    (31) retorno -> VARIABLE NUMERO_ENTERO .
    (27) retorno -> NUMERO_ENTERO .

  ! reduce/reduce conflict for BACK resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for CADENA resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for OUT resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for FUN resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for DURING resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for REAL resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for CAD resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for NULL resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for FIN resolved using rule 27 (retorno -> NUMERO_ENTERO .)
  ! reduce/reduce conflict for END resolved using rule 27 (retorno -> NUMERO_ENTERO .)
    BACK            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    VARIABLE        reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    CADENA          reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    OUT             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    FUN             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    IF              reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    DURING          reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    DO              reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    INT             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    REAL            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    CAD             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    NULL            reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    FIN             reduce using rule 27 (retorno -> NUMERO_ENTERO .)
    END             reduce using rule 27 (retorno -> NUMERO_ENTERO .)

  ! BACK            [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! VARIABLE        [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! NUMERO_ENTERO   [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! NUMERO_REAL     [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! CADENA          [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! OUT             [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! FUN             [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! IF              [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! AGRUPACION_EC1  [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! DURING          [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! DO              [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! INT             [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! REAL            [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! CAD             [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! NULL            [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! FIN             [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]
  ! END             [ reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .) ]


state 55

    (32) retorno -> VARIABLE NUMERO_REAL .
    (28) retorno -> NUMERO_REAL .

  ! reduce/reduce conflict for BACK resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for CADENA resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for OUT resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for FUN resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for IF resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for DURING resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for DO resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for INT resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for REAL resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for CAD resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for NULL resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for FIN resolved using rule 28 (retorno -> NUMERO_REAL .)
  ! reduce/reduce conflict for END resolved using rule 28 (retorno -> NUMERO_REAL .)
    BACK            reduce using rule 28 (retorno -> NUMERO_REAL .)
    VARIABLE        reduce using rule 28 (retorno -> NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 28 (retorno -> NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 28 (retorno -> NUMERO_REAL .)
    CADENA          reduce using rule 28 (retorno -> NUMERO_REAL .)
    OUT             reduce using rule 28 (retorno -> NUMERO_REAL .)
    FUN             reduce using rule 28 (retorno -> NUMERO_REAL .)
    IF              reduce using rule 28 (retorno -> NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 28 (retorno -> NUMERO_REAL .)
    DURING          reduce using rule 28 (retorno -> NUMERO_REAL .)
    DO              reduce using rule 28 (retorno -> NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 28 (retorno -> NUMERO_REAL .)
    INT             reduce using rule 28 (retorno -> NUMERO_REAL .)
    REAL            reduce using rule 28 (retorno -> NUMERO_REAL .)
    CAD             reduce using rule 28 (retorno -> NUMERO_REAL .)
    NULL            reduce using rule 28 (retorno -> NUMERO_REAL .)
    FIN             reduce using rule 28 (retorno -> NUMERO_REAL .)
    END             reduce using rule 28 (retorno -> NUMERO_REAL .)

  ! BACK            [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! VARIABLE        [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! NUMERO_ENTERO   [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! NUMERO_REAL     [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! CADENA          [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! OUT             [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! FUN             [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! IF              [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! AGRUPACION_EC1  [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! DURING          [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! DO              [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! INT             [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! REAL            [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! CAD             [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! NULL            [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! FIN             [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]
  ! END             [ reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .) ]


state 56

    (33) retorno -> VARIABLE CADENA .
    (161) expresioncad -> CADENA .
    (29) retorno -> CADENA .

  ! reduce/reduce conflict for FIN resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for BACK resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for CADENA resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for OUT resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for FUN resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for IF resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for DURING resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for DO resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for INT resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for REAL resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for CAD resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for NULL resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for END resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for BACK resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for CADENA resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for OUT resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for FUN resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for IF resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for DURING resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for DO resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for INT resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for REAL resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for CAD resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for NULL resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for FIN resolved using rule 29 (retorno -> CADENA .)
  ! reduce/reduce conflict for END resolved using rule 29 (retorno -> CADENA .)
    SUMA            reduce using rule 161 (expresioncad -> CADENA .)
    BACK            reduce using rule 29 (retorno -> CADENA .)
    VARIABLE        reduce using rule 29 (retorno -> CADENA .)
    NUMERO_ENTERO   reduce using rule 29 (retorno -> CADENA .)
    NUMERO_REAL     reduce using rule 29 (retorno -> CADENA .)
    CADENA          reduce using rule 29 (retorno -> CADENA .)
    OUT             reduce using rule 29 (retorno -> CADENA .)
    FUN             reduce using rule 29 (retorno -> CADENA .)
    IF              reduce using rule 29 (retorno -> CADENA .)
    AGRUPACION_EC1  reduce using rule 29 (retorno -> CADENA .)
    DURING          reduce using rule 29 (retorno -> CADENA .)
    DO              reduce using rule 29 (retorno -> CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 29 (retorno -> CADENA .)
    INT             reduce using rule 29 (retorno -> CADENA .)
    REAL            reduce using rule 29 (retorno -> CADENA .)
    CAD             reduce using rule 29 (retorno -> CADENA .)
    NULL            reduce using rule 29 (retorno -> CADENA .)
    FIN             reduce using rule 29 (retorno -> CADENA .)
    END             reduce using rule 29 (retorno -> CADENA .)

  ! BACK            [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! VARIABLE        [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! NUMERO_ENTERO   [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! NUMERO_REAL     [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! CADENA          [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! OUT             [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! FUN             [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! IF              [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! AGRUPACION_EC1  [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! DURING          [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! DO              [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! INT             [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! REAL            [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! CAD             [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! NULL            [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! FIN             [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! END             [ reduce using rule 33 (retorno -> VARIABLE CADENA .) ]
  ! FIN             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! BACK            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! VARIABLE        [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! NUMERO_ENTERO   [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! NUMERO_REAL     [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! CADENA          [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! OUT             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! FUN             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! IF              [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! AGRUPACION_EC1  [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! DURING          [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! DO              [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! INT             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! REAL            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! CAD             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! NULL            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! END             [ reduce using rule 161 (expresioncad -> CADENA .) ]


state 57

    (111) salidadatos -> VARIABLE expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    BACK            reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    VARIABLE        reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    NUMERO_ENTERO   reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    NUMERO_REAL     reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    CADENA          reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    OUT             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    FUN             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    IF              reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    AGRUPACION_EC1  reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    DURING          reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    DO              reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    INT             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    REAL            reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    CAD             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    NULL            reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    END             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    $end            reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    BUT             reduce using rule 111 (salidadatos -> VARIABLE expresioncad .)
    SUMA            shift and go to state 111


state 58

    (16) iniciofuncion -> VARIABLE tdadef . FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> tdadef . FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    FUNCTION_NAME   shift and go to state 112


state 59

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 113
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 60

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 114
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 61

    (118) asignacionint -> VARIABLE ASIGNACION_VALORES . expresionint
    (119) asignacionint -> VARIABLE ASIGNACION_VALORES . lecturadatos
    (120) asignacionreal -> VARIABLE ASIGNACION_VALORES . expresionreal
    (121) asignacioncad -> VARIABLE ASIGNACION_VALORES . expresioncad
    (116) asignacionvar -> VARIABLE ASIGNACION_VALORES . expresionvar
    (117) asignacionvar -> VARIABLE ASIGNACION_VALORES . llamadafuncion
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (145) lecturadatos -> . IN expresioncad
    (146) lecturadatos -> . VARIABLE expresioncad
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (34) llamadafuncion -> . FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (35) llamadafuncion -> . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (36) llamadafuncion -> . VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 123
    IN              shift and go to state 124
    VARIABLE        shift and go to state 115
    NUMERO_REAL     shift and go to state 125
    CADENA          shift and go to state 84
    FUNCTION_NAME   shift and go to state 126

    expresionint                   shift and go to state 116
    lecturadatos                   shift and go to state 117
    expresionreal                  shift and go to state 118
    expresioncad                   shift and go to state 119
    expresionvar                   shift and go to state 120
    llamadafuncion                 shift and go to state 121

state 62

    (48) tdadef -> INT .
    (127) declaracionint -> INT . VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> INT . VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> INT . VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> INT . VARIABLE ASIGNACION_VALORES llamadafuncion

    FUNCTION_NAME   reduce using rule 48 (tdadef -> INT .)
    VARIABLE        shift and go to state 102


state 63

    (49) tdadef -> REAL .
    (135) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> REAL . VARIABLE ASIGNACION_VALORES llamadafuncion

    FUNCTION_NAME   reduce using rule 49 (tdadef -> REAL .)
    VARIABLE        shift and go to state 103


state 64

    (50) tdadef -> CAD .
    (140) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> CAD . VARIABLE ASIGNACION_VALORES llamadafuncion

    FUNCTION_NAME   reduce using rule 50 (tdadef -> CAD .)
    VARIABLE        shift and go to state 104


state 65

    (8) conjinstrucciones -> BEGIN bloque . END
    (11) conjinstrucciones -> BEGIN bloque .
    (13) conjinstrucciones -> BEGIN bloque . VARIABLE

    END             shift and go to state 127
    $end            reduce using rule 11 (conjinstrucciones -> BEGIN bloque .)
    VARIABLE        shift and go to state 128


state 66

    (12) conjinstrucciones -> BEGIN retorno . bloque
    (100) bloque -> retorno . bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]

    retorno                        shift and go to state 10
    bloque                         shift and go to state 129
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 67

    (26) retorno -> VARIABLE .
    (30) retorno -> VARIABLE . VARIABLE
    (31) retorno -> VARIABLE . NUMERO_ENTERO
    (32) retorno -> VARIABLE . NUMERO_REAL
    (33) retorno -> VARIABLE . CADENA
    (111) salidadatos -> VARIABLE . expresioncad
    (16) iniciofuncion -> VARIABLE . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (71) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (57) estructuraiteracion2 -> VARIABLE . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> VARIABLE . ASIGNACION_VALORES expresionint
    (119) asignacionint -> VARIABLE . ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> VARIABLE . ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> VARIABLE . ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> VARIABLE . ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> VARIABLE . ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE . VARIABLE ASIGNACION_VALORES expresioncad
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            reduce using rule 26 (retorno -> VARIABLE .)
    OUT             reduce using rule 26 (retorno -> VARIABLE .)
    FUN             reduce using rule 26 (retorno -> VARIABLE .)
    IF              reduce using rule 26 (retorno -> VARIABLE .)
    DURING          reduce using rule 26 (retorno -> VARIABLE .)
    DO              reduce using rule 26 (retorno -> VARIABLE .)
    FIN             reduce using rule 26 (retorno -> VARIABLE .)
    $end            reduce using rule 26 (retorno -> VARIABLE .)
    END             reduce using rule 26 (retorno -> VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 26 (retorno -> VARIABLE .)
    BUT             reduce using rule 26 (retorno -> VARIABLE .)
    VARIABLE        shift and go to state 130
    NUMERO_ENTERO   shift and go to state 131
    NUMERO_REAL     shift and go to state 132
    CADENA          shift and go to state 133
    AGRUPACION_EC1  shift and go to state 135
    AGRUPACION_BLOQUE_EC1 shift and go to state 136
    ASIGNACION_VALORES shift and go to state 61
    INT             shift and go to state 86
    REAL            shift and go to state 87
    CAD             shift and go to state 88
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CADENA          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! INT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! REAL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CAD             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NULL            [ reduce using rule 26 (retorno -> VARIABLE .) ]

    expresioncad                   shift and go to state 57
    tdadef                         shift and go to state 134

state 68

    (9) conjinstrucciones -> bloque END .

    $end            reduce using rule 9 (conjinstrucciones -> bloque END .)


state 69

    (100) bloque -> retorno bloque .

    END             reduce using rule 100 (bloque -> retorno bloque .)
    VARIABLE        reduce using rule 100 (bloque -> retorno bloque .)
    $end            reduce using rule 100 (bloque -> retorno bloque .)
    BACK            reduce using rule 100 (bloque -> retorno bloque .)
    NUMERO_ENTERO   reduce using rule 100 (bloque -> retorno bloque .)
    NUMERO_REAL     reduce using rule 100 (bloque -> retorno bloque .)
    CADENA          reduce using rule 100 (bloque -> retorno bloque .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 100 (bloque -> retorno bloque .)
    DURING          reduce using rule 100 (bloque -> retorno bloque .)
    BUT             reduce using rule 100 (bloque -> retorno bloque .)
    OUT             reduce using rule 100 (bloque -> retorno bloque .)
    FUN             reduce using rule 100 (bloque -> retorno bloque .)
    IF              reduce using rule 100 (bloque -> retorno bloque .)
    AGRUPACION_EC1  reduce using rule 100 (bloque -> retorno bloque .)
    DO              reduce using rule 100 (bloque -> retorno bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 100 (bloque -> retorno bloque .)
    INT             reduce using rule 100 (bloque -> retorno bloque .)
    REAL            reduce using rule 100 (bloque -> retorno bloque .)
    CAD             reduce using rule 100 (bloque -> retorno bloque .)
    NULL            reduce using rule 100 (bloque -> retorno bloque .)
    FIN             reduce using rule 100 (bloque -> retorno bloque .)


state 70

    (96) bloque -> final bloque .

    END             reduce using rule 96 (bloque -> final bloque .)
    VARIABLE        reduce using rule 96 (bloque -> final bloque .)
    $end            reduce using rule 96 (bloque -> final bloque .)
    BACK            reduce using rule 96 (bloque -> final bloque .)
    NUMERO_ENTERO   reduce using rule 96 (bloque -> final bloque .)
    NUMERO_REAL     reduce using rule 96 (bloque -> final bloque .)
    CADENA          reduce using rule 96 (bloque -> final bloque .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 96 (bloque -> final bloque .)
    DURING          reduce using rule 96 (bloque -> final bloque .)
    BUT             reduce using rule 96 (bloque -> final bloque .)
    OUT             reduce using rule 96 (bloque -> final bloque .)
    FUN             reduce using rule 96 (bloque -> final bloque .)
    IF              reduce using rule 96 (bloque -> final bloque .)
    AGRUPACION_EC1  reduce using rule 96 (bloque -> final bloque .)
    DO              reduce using rule 96 (bloque -> final bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 96 (bloque -> final bloque .)
    INT             reduce using rule 96 (bloque -> final bloque .)
    REAL            reduce using rule 96 (bloque -> final bloque .)
    CAD             reduce using rule 96 (bloque -> final bloque .)
    NULL            reduce using rule 96 (bloque -> final bloque .)
    FIN             reduce using rule 96 (bloque -> final bloque .)


state 71

    (97) bloque -> funcion bloque .

    END             reduce using rule 97 (bloque -> funcion bloque .)
    VARIABLE        reduce using rule 97 (bloque -> funcion bloque .)
    $end            reduce using rule 97 (bloque -> funcion bloque .)
    BACK            reduce using rule 97 (bloque -> funcion bloque .)
    NUMERO_ENTERO   reduce using rule 97 (bloque -> funcion bloque .)
    NUMERO_REAL     reduce using rule 97 (bloque -> funcion bloque .)
    CADENA          reduce using rule 97 (bloque -> funcion bloque .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 97 (bloque -> funcion bloque .)
    DURING          reduce using rule 97 (bloque -> funcion bloque .)
    BUT             reduce using rule 97 (bloque -> funcion bloque .)
    OUT             reduce using rule 97 (bloque -> funcion bloque .)
    FUN             reduce using rule 97 (bloque -> funcion bloque .)
    IF              reduce using rule 97 (bloque -> funcion bloque .)
    AGRUPACION_EC1  reduce using rule 97 (bloque -> funcion bloque .)
    DO              reduce using rule 97 (bloque -> funcion bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 97 (bloque -> funcion bloque .)
    INT             reduce using rule 97 (bloque -> funcion bloque .)
    REAL            reduce using rule 97 (bloque -> funcion bloque .)
    CAD             reduce using rule 97 (bloque -> funcion bloque .)
    NULL            reduce using rule 97 (bloque -> funcion bloque .)
    FIN             reduce using rule 97 (bloque -> funcion bloque .)


state 72

    (98) bloque -> estructuracontrol bloque .

    END             reduce using rule 98 (bloque -> estructuracontrol bloque .)
    VARIABLE        reduce using rule 98 (bloque -> estructuracontrol bloque .)
    $end            reduce using rule 98 (bloque -> estructuracontrol bloque .)
    BACK            reduce using rule 98 (bloque -> estructuracontrol bloque .)
    NUMERO_ENTERO   reduce using rule 98 (bloque -> estructuracontrol bloque .)
    NUMERO_REAL     reduce using rule 98 (bloque -> estructuracontrol bloque .)
    CADENA          reduce using rule 98 (bloque -> estructuracontrol bloque .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 98 (bloque -> estructuracontrol bloque .)
    DURING          reduce using rule 98 (bloque -> estructuracontrol bloque .)
    BUT             reduce using rule 98 (bloque -> estructuracontrol bloque .)
    OUT             reduce using rule 98 (bloque -> estructuracontrol bloque .)
    FUN             reduce using rule 98 (bloque -> estructuracontrol bloque .)
    IF              reduce using rule 98 (bloque -> estructuracontrol bloque .)
    AGRUPACION_EC1  reduce using rule 98 (bloque -> estructuracontrol bloque .)
    DO              reduce using rule 98 (bloque -> estructuracontrol bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 98 (bloque -> estructuracontrol bloque .)
    INT             reduce using rule 98 (bloque -> estructuracontrol bloque .)
    REAL            reduce using rule 98 (bloque -> estructuracontrol bloque .)
    CAD             reduce using rule 98 (bloque -> estructuracontrol bloque .)
    NULL            reduce using rule 98 (bloque -> estructuracontrol bloque .)
    FIN             reduce using rule 98 (bloque -> estructuracontrol bloque .)


state 73

    (99) bloque -> finvac bloque .

    END             reduce using rule 99 (bloque -> finvac bloque .)
    VARIABLE        reduce using rule 99 (bloque -> finvac bloque .)
    $end            reduce using rule 99 (bloque -> finvac bloque .)
    BACK            reduce using rule 99 (bloque -> finvac bloque .)
    NUMERO_ENTERO   reduce using rule 99 (bloque -> finvac bloque .)
    NUMERO_REAL     reduce using rule 99 (bloque -> finvac bloque .)
    CADENA          reduce using rule 99 (bloque -> finvac bloque .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 99 (bloque -> finvac bloque .)
    DURING          reduce using rule 99 (bloque -> finvac bloque .)
    BUT             reduce using rule 99 (bloque -> finvac bloque .)
    OUT             reduce using rule 99 (bloque -> finvac bloque .)
    FUN             reduce using rule 99 (bloque -> finvac bloque .)
    IF              reduce using rule 99 (bloque -> finvac bloque .)
    AGRUPACION_EC1  reduce using rule 99 (bloque -> finvac bloque .)
    DO              reduce using rule 99 (bloque -> finvac bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 99 (bloque -> finvac bloque .)
    INT             reduce using rule 99 (bloque -> finvac bloque .)
    REAL            reduce using rule 99 (bloque -> finvac bloque .)
    CAD             reduce using rule 99 (bloque -> finvac bloque .)
    NULL            reduce using rule 99 (bloque -> finvac bloque .)
    FIN             reduce using rule 99 (bloque -> finvac bloque .)


state 74

    (103) finvac -> empty FIN .

    BACK            reduce using rule 103 (finvac -> empty FIN .)
    VARIABLE        reduce using rule 103 (finvac -> empty FIN .)
    NUMERO_ENTERO   reduce using rule 103 (finvac -> empty FIN .)
    NUMERO_REAL     reduce using rule 103 (finvac -> empty FIN .)
    CADENA          reduce using rule 103 (finvac -> empty FIN .)
    OUT             reduce using rule 103 (finvac -> empty FIN .)
    FUN             reduce using rule 103 (finvac -> empty FIN .)
    IF              reduce using rule 103 (finvac -> empty FIN .)
    AGRUPACION_EC1  reduce using rule 103 (finvac -> empty FIN .)
    DURING          reduce using rule 103 (finvac -> empty FIN .)
    DO              reduce using rule 103 (finvac -> empty FIN .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 103 (finvac -> empty FIN .)
    INT             reduce using rule 103 (finvac -> empty FIN .)
    REAL            reduce using rule 103 (finvac -> empty FIN .)
    CAD             reduce using rule 103 (finvac -> empty FIN .)
    NULL            reduce using rule 103 (finvac -> empty FIN .)
    FIN             reduce using rule 103 (finvac -> empty FIN .)
    END             reduce using rule 103 (finvac -> empty FIN .)
    $end            reduce using rule 103 (finvac -> empty FIN .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 103 (finvac -> empty FIN .)
    BUT             reduce using rule 103 (finvac -> empty FIN .)


state 75

    (104) final -> asignacion FIN .

    BACK            reduce using rule 104 (final -> asignacion FIN .)
    VARIABLE        reduce using rule 104 (final -> asignacion FIN .)
    NUMERO_ENTERO   reduce using rule 104 (final -> asignacion FIN .)
    NUMERO_REAL     reduce using rule 104 (final -> asignacion FIN .)
    CADENA          reduce using rule 104 (final -> asignacion FIN .)
    OUT             reduce using rule 104 (final -> asignacion FIN .)
    FUN             reduce using rule 104 (final -> asignacion FIN .)
    IF              reduce using rule 104 (final -> asignacion FIN .)
    AGRUPACION_EC1  reduce using rule 104 (final -> asignacion FIN .)
    DURING          reduce using rule 104 (final -> asignacion FIN .)
    DO              reduce using rule 104 (final -> asignacion FIN .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 104 (final -> asignacion FIN .)
    INT             reduce using rule 104 (final -> asignacion FIN .)
    REAL            reduce using rule 104 (final -> asignacion FIN .)
    CAD             reduce using rule 104 (final -> asignacion FIN .)
    NULL            reduce using rule 104 (final -> asignacion FIN .)
    FIN             reduce using rule 104 (final -> asignacion FIN .)
    END             reduce using rule 104 (final -> asignacion FIN .)
    $end            reduce using rule 104 (final -> asignacion FIN .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 104 (final -> asignacion FIN .)
    BUT             reduce using rule 104 (final -> asignacion FIN .)


state 76

    (105) final -> salidadatos FIN .

    BACK            reduce using rule 105 (final -> salidadatos FIN .)
    VARIABLE        reduce using rule 105 (final -> salidadatos FIN .)
    NUMERO_ENTERO   reduce using rule 105 (final -> salidadatos FIN .)
    NUMERO_REAL     reduce using rule 105 (final -> salidadatos FIN .)
    CADENA          reduce using rule 105 (final -> salidadatos FIN .)
    OUT             reduce using rule 105 (final -> salidadatos FIN .)
    FUN             reduce using rule 105 (final -> salidadatos FIN .)
    IF              reduce using rule 105 (final -> salidadatos FIN .)
    AGRUPACION_EC1  reduce using rule 105 (final -> salidadatos FIN .)
    DURING          reduce using rule 105 (final -> salidadatos FIN .)
    DO              reduce using rule 105 (final -> salidadatos FIN .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 105 (final -> salidadatos FIN .)
    INT             reduce using rule 105 (final -> salidadatos FIN .)
    REAL            reduce using rule 105 (final -> salidadatos FIN .)
    CAD             reduce using rule 105 (final -> salidadatos FIN .)
    NULL            reduce using rule 105 (final -> salidadatos FIN .)
    FIN             reduce using rule 105 (final -> salidadatos FIN .)
    END             reduce using rule 105 (final -> salidadatos FIN .)
    $end            reduce using rule 105 (final -> salidadatos FIN .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 105 (final -> salidadatos FIN .)
    BUT             reduce using rule 105 (final -> salidadatos FIN .)


state 77

    (106) final -> declaracion FIN .

    BACK            reduce using rule 106 (final -> declaracion FIN .)
    VARIABLE        reduce using rule 106 (final -> declaracion FIN .)
    NUMERO_ENTERO   reduce using rule 106 (final -> declaracion FIN .)
    NUMERO_REAL     reduce using rule 106 (final -> declaracion FIN .)
    CADENA          reduce using rule 106 (final -> declaracion FIN .)
    OUT             reduce using rule 106 (final -> declaracion FIN .)
    FUN             reduce using rule 106 (final -> declaracion FIN .)
    IF              reduce using rule 106 (final -> declaracion FIN .)
    AGRUPACION_EC1  reduce using rule 106 (final -> declaracion FIN .)
    DURING          reduce using rule 106 (final -> declaracion FIN .)
    DO              reduce using rule 106 (final -> declaracion FIN .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 106 (final -> declaracion FIN .)
    INT             reduce using rule 106 (final -> declaracion FIN .)
    REAL            reduce using rule 106 (final -> declaracion FIN .)
    CAD             reduce using rule 106 (final -> declaracion FIN .)
    NULL            reduce using rule 106 (final -> declaracion FIN .)
    FIN             reduce using rule 106 (final -> declaracion FIN .)
    END             reduce using rule 106 (final -> declaracion FIN .)
    $end            reduce using rule 106 (final -> declaracion FIN .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 106 (final -> declaracion FIN .)
    BUT             reduce using rule 106 (final -> declaracion FIN .)


state 78

    (19) funcion -> iniciofuncion bloque . finfuncion
    (20) finfuncion -> . retorno AGRUPACION_BLOQUE_EC2
    (21) finfuncion -> . retorno
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 139
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26

    finfuncion                     shift and go to state 137
    retorno                        shift and go to state 138

state 79

    (22) retorno -> BACK VARIABLE .

    BACK            reduce using rule 22 (retorno -> BACK VARIABLE .)
    VARIABLE        reduce using rule 22 (retorno -> BACK VARIABLE .)
    NUMERO_ENTERO   reduce using rule 22 (retorno -> BACK VARIABLE .)
    NUMERO_REAL     reduce using rule 22 (retorno -> BACK VARIABLE .)
    CADENA          reduce using rule 22 (retorno -> BACK VARIABLE .)
    OUT             reduce using rule 22 (retorno -> BACK VARIABLE .)
    FUN             reduce using rule 22 (retorno -> BACK VARIABLE .)
    IF              reduce using rule 22 (retorno -> BACK VARIABLE .)
    AGRUPACION_EC1  reduce using rule 22 (retorno -> BACK VARIABLE .)
    DURING          reduce using rule 22 (retorno -> BACK VARIABLE .)
    DO              reduce using rule 22 (retorno -> BACK VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 22 (retorno -> BACK VARIABLE .)
    INT             reduce using rule 22 (retorno -> BACK VARIABLE .)
    REAL            reduce using rule 22 (retorno -> BACK VARIABLE .)
    CAD             reduce using rule 22 (retorno -> BACK VARIABLE .)
    NULL            reduce using rule 22 (retorno -> BACK VARIABLE .)
    FIN             reduce using rule 22 (retorno -> BACK VARIABLE .)
    END             reduce using rule 22 (retorno -> BACK VARIABLE .)
    $end            reduce using rule 22 (retorno -> BACK VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 22 (retorno -> BACK VARIABLE .)
    BUT             reduce using rule 22 (retorno -> BACK VARIABLE .)


state 80

    (23) retorno -> BACK NUMERO_ENTERO .

    BACK            reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    VARIABLE        reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    CADENA          reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    OUT             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    FUN             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    IF              reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    DURING          reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    DO              reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    INT             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    REAL            reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    CAD             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    NULL            reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    FIN             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    END             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    $end            reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)
    BUT             reduce using rule 23 (retorno -> BACK NUMERO_ENTERO .)


state 81

    (24) retorno -> BACK NUMERO_REAL .

    BACK            reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    VARIABLE        reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    CADENA          reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    OUT             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    FUN             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    IF              reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    DURING          reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    DO              reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    INT             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    REAL            reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    CAD             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    NULL            reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    FIN             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    END             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    $end            reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 24 (retorno -> BACK NUMERO_REAL .)
    BUT             reduce using rule 24 (retorno -> BACK NUMERO_REAL .)


state 82

    (25) retorno -> BACK CADENA .

    BACK            reduce using rule 25 (retorno -> BACK CADENA .)
    VARIABLE        reduce using rule 25 (retorno -> BACK CADENA .)
    NUMERO_ENTERO   reduce using rule 25 (retorno -> BACK CADENA .)
    NUMERO_REAL     reduce using rule 25 (retorno -> BACK CADENA .)
    CADENA          reduce using rule 25 (retorno -> BACK CADENA .)
    OUT             reduce using rule 25 (retorno -> BACK CADENA .)
    FUN             reduce using rule 25 (retorno -> BACK CADENA .)
    IF              reduce using rule 25 (retorno -> BACK CADENA .)
    AGRUPACION_EC1  reduce using rule 25 (retorno -> BACK CADENA .)
    DURING          reduce using rule 25 (retorno -> BACK CADENA .)
    DO              reduce using rule 25 (retorno -> BACK CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 25 (retorno -> BACK CADENA .)
    INT             reduce using rule 25 (retorno -> BACK CADENA .)
    REAL            reduce using rule 25 (retorno -> BACK CADENA .)
    CAD             reduce using rule 25 (retorno -> BACK CADENA .)
    NULL            reduce using rule 25 (retorno -> BACK CADENA .)
    FIN             reduce using rule 25 (retorno -> BACK CADENA .)
    END             reduce using rule 25 (retorno -> BACK CADENA .)
    $end            reduce using rule 25 (retorno -> BACK CADENA .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 25 (retorno -> BACK CADENA .)
    BUT             reduce using rule 25 (retorno -> BACK CADENA .)


state 83

    (110) salidadatos -> OUT expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    BACK            reduce using rule 110 (salidadatos -> OUT expresioncad .)
    VARIABLE        reduce using rule 110 (salidadatos -> OUT expresioncad .)
    NUMERO_ENTERO   reduce using rule 110 (salidadatos -> OUT expresioncad .)
    NUMERO_REAL     reduce using rule 110 (salidadatos -> OUT expresioncad .)
    CADENA          reduce using rule 110 (salidadatos -> OUT expresioncad .)
    OUT             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    FUN             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    IF              reduce using rule 110 (salidadatos -> OUT expresioncad .)
    AGRUPACION_EC1  reduce using rule 110 (salidadatos -> OUT expresioncad .)
    DURING          reduce using rule 110 (salidadatos -> OUT expresioncad .)
    DO              reduce using rule 110 (salidadatos -> OUT expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 110 (salidadatos -> OUT expresioncad .)
    INT             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    REAL            reduce using rule 110 (salidadatos -> OUT expresioncad .)
    CAD             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    NULL            reduce using rule 110 (salidadatos -> OUT expresioncad .)
    END             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    $end            reduce using rule 110 (salidadatos -> OUT expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 110 (salidadatos -> OUT expresioncad .)
    BUT             reduce using rule 110 (salidadatos -> OUT expresioncad .)
    SUMA            shift and go to state 111


state 84

    (161) expresioncad -> CADENA .

    SUMA            reduce using rule 161 (expresioncad -> CADENA .)
    FIN             reduce using rule 161 (expresioncad -> CADENA .)
    BACK            reduce using rule 161 (expresioncad -> CADENA .)
    VARIABLE        reduce using rule 161 (expresioncad -> CADENA .)
    NUMERO_ENTERO   reduce using rule 161 (expresioncad -> CADENA .)
    NUMERO_REAL     reduce using rule 161 (expresioncad -> CADENA .)
    CADENA          reduce using rule 161 (expresioncad -> CADENA .)
    OUT             reduce using rule 161 (expresioncad -> CADENA .)
    FUN             reduce using rule 161 (expresioncad -> CADENA .)
    IF              reduce using rule 161 (expresioncad -> CADENA .)
    AGRUPACION_EC1  reduce using rule 161 (expresioncad -> CADENA .)
    DURING          reduce using rule 161 (expresioncad -> CADENA .)
    DO              reduce using rule 161 (expresioncad -> CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 161 (expresioncad -> CADENA .)
    INT             reduce using rule 161 (expresioncad -> CADENA .)
    REAL            reduce using rule 161 (expresioncad -> CADENA .)
    CAD             reduce using rule 161 (expresioncad -> CADENA .)
    NULL            reduce using rule 161 (expresioncad -> CADENA .)
    END             reduce using rule 161 (expresioncad -> CADENA .)
    $end            reduce using rule 161 (expresioncad -> CADENA .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 161 (expresioncad -> CADENA .)
    BUT             reduce using rule 161 (expresioncad -> CADENA .)


state 85

    (14) iniciofuncion -> FUN tdadef . FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> FUN tdadef . VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> FUN tdadef . FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2

    FUNCTION_NAME   shift and go to state 140
    VARIABLE        shift and go to state 141


state 86

    (48) tdadef -> INT .

    FUNCTION_NAME   reduce using rule 48 (tdadef -> INT .)
    VARIABLE        reduce using rule 48 (tdadef -> INT .)


state 87

    (49) tdadef -> REAL .

    FUNCTION_NAME   reduce using rule 49 (tdadef -> REAL .)
    VARIABLE        reduce using rule 49 (tdadef -> REAL .)


state 88

    (50) tdadef -> CAD .

    FUNCTION_NAME   reduce using rule 50 (tdadef -> CAD .)
    VARIABLE        reduce using rule 50 (tdadef -> CAD .)


state 89

    (15) iniciofuncion -> tdadef FUNCTION_NAME . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    AGRUPACION_EC1  shift and go to state 142


state 90

    (82) parametroscontrol -> AGRUPACION_EC1 . tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 143
    valor                          shift and go to state 93

state 91

    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 144
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 92

    (81) parametroscontrol -> tdacontrol . operadorrel tdacontrol
    (90) operadorrel -> . IGUAL
    (91) operadorrel -> . DIFERENTE
    (92) operadorrel -> . MENOR
    (93) operadorrel -> . MAYOR
    (94) operadorrel -> . MAYOR_IGUAL
    (95) operadorrel -> . MENOR_IGUAL

    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOR           shift and go to state 152
    MAYOR           shift and go to state 153
    MAYOR_IGUAL     shift and go to state 154
    MENOR_IGUAL     shift and go to state 155

    operadorrel                    shift and go to state 149

state 93

    (85) tdacontrol -> valor .

    IGUAL           reduce using rule 85 (tdacontrol -> valor .)
    DIFERENTE       reduce using rule 85 (tdacontrol -> valor .)
    MENOR           reduce using rule 85 (tdacontrol -> valor .)
    MAYOR           reduce using rule 85 (tdacontrol -> valor .)
    MAYOR_IGUAL     reduce using rule 85 (tdacontrol -> valor .)
    MENOR_IGUAL     reduce using rule 85 (tdacontrol -> valor .)
    AGRUPACION_EC2  reduce using rule 85 (tdacontrol -> valor .)
    Y_LOGICO        reduce using rule 85 (tdacontrol -> valor .)
    O_LOGICO        reduce using rule 85 (tdacontrol -> valor .)
    NEGACION        reduce using rule 85 (tdacontrol -> valor .)


state 94

    (86) tdacontrol -> VARIABLE .

    IGUAL           reduce using rule 86 (tdacontrol -> VARIABLE .)
    DIFERENTE       reduce using rule 86 (tdacontrol -> VARIABLE .)
    MENOR           reduce using rule 86 (tdacontrol -> VARIABLE .)
    MAYOR           reduce using rule 86 (tdacontrol -> VARIABLE .)
    MAYOR_IGUAL     reduce using rule 86 (tdacontrol -> VARIABLE .)
    MENOR_IGUAL     reduce using rule 86 (tdacontrol -> VARIABLE .)
    AGRUPACION_EC2  reduce using rule 86 (tdacontrol -> VARIABLE .)
    Y_LOGICO        reduce using rule 86 (tdacontrol -> VARIABLE .)
    O_LOGICO        reduce using rule 86 (tdacontrol -> VARIABLE .)
    NEGACION        reduce using rule 86 (tdacontrol -> VARIABLE .)


state 95

    (173) valor -> NUMERO_ENTERO .

    IGUAL           reduce using rule 173 (valor -> NUMERO_ENTERO .)
    DIFERENTE       reduce using rule 173 (valor -> NUMERO_ENTERO .)
    MENOR           reduce using rule 173 (valor -> NUMERO_ENTERO .)
    MAYOR           reduce using rule 173 (valor -> NUMERO_ENTERO .)
    MAYOR_IGUAL     reduce using rule 173 (valor -> NUMERO_ENTERO .)
    MENOR_IGUAL     reduce using rule 173 (valor -> NUMERO_ENTERO .)
    AGRUPACION_EC2  reduce using rule 173 (valor -> NUMERO_ENTERO .)
    Y_LOGICO        reduce using rule 173 (valor -> NUMERO_ENTERO .)
    O_LOGICO        reduce using rule 173 (valor -> NUMERO_ENTERO .)
    NEGACION        reduce using rule 173 (valor -> NUMERO_ENTERO .)


state 96

    (174) valor -> NUMERO_REAL .

    IGUAL           reduce using rule 174 (valor -> NUMERO_REAL .)
    DIFERENTE       reduce using rule 174 (valor -> NUMERO_REAL .)
    MENOR           reduce using rule 174 (valor -> NUMERO_REAL .)
    MAYOR           reduce using rule 174 (valor -> NUMERO_REAL .)
    MAYOR_IGUAL     reduce using rule 174 (valor -> NUMERO_REAL .)
    MENOR_IGUAL     reduce using rule 174 (valor -> NUMERO_REAL .)
    AGRUPACION_EC2  reduce using rule 174 (valor -> NUMERO_REAL .)
    Y_LOGICO        reduce using rule 174 (valor -> NUMERO_REAL .)
    O_LOGICO        reduce using rule 174 (valor -> NUMERO_REAL .)
    NEGACION        reduce using rule 174 (valor -> NUMERO_REAL .)


state 97

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 156


state 98

    (67) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 157
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 99

    (62) estructuraiteracion1 -> DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 158
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 100

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 . bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for DURING resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! DURING          [ reduce using rule 102 (empty -> .) ]

    bloque                         shift and go to state 159
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 101

    (60) estructuraiteracion2 -> DO bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 160


state 102

    (127) declaracionint -> INT VARIABLE . ASIGNACION_VALORES expresionint
    (128) declaracionint -> INT VARIABLE . ASIGNACION_VALORES expresionvar
    (129) declaracionint -> INT VARIABLE . ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> INT VARIABLE . ASIGNACION_VALORES llamadafuncion

    ASIGNACION_VALORES shift and go to state 161


state 103

    (135) declaracionreal -> REAL VARIABLE . ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> REAL VARIABLE . ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> REAL VARIABLE . ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> REAL VARIABLE . ASIGNACION_VALORES llamadafuncion

    ASIGNACION_VALORES shift and go to state 162


state 104

    (140) declaracioncad -> CAD VARIABLE . ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> CAD VARIABLE . ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> CAD VARIABLE . ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> CAD VARIABLE . ASIGNACION_VALORES llamadafuncion

    ASIGNACION_VALORES shift and go to state 163


state 105

    (30) retorno -> VARIABLE VARIABLE .
    (131) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE VARIABLE . ASIGNACION_VALORES expresioncad
    (26) retorno -> VARIABLE .
    (30) retorno -> VARIABLE . VARIABLE
    (31) retorno -> VARIABLE . NUMERO_ENTERO
    (32) retorno -> VARIABLE . NUMERO_REAL
    (33) retorno -> VARIABLE . CADENA
    (111) salidadatos -> VARIABLE . expresioncad
    (16) iniciofuncion -> VARIABLE . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (71) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (57) estructuraiteracion2 -> VARIABLE . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> VARIABLE . ASIGNACION_VALORES expresionint
    (119) asignacionint -> VARIABLE . ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> VARIABLE . ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> VARIABLE . ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> VARIABLE . ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> VARIABLE . ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE . VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE . VARIABLE ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE . VARIABLE ASIGNACION_VALORES expresioncad
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! reduce/reduce conflict for BACK resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for CADENA resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for OUT resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for FUN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for DURING resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for REAL resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for CAD resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for NULL resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for FIN resolved using rule 26 (retorno -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 26 (retorno -> VARIABLE .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    ASIGNACION_VALORES shift and go to state 109
    BACK            reduce using rule 26 (retorno -> VARIABLE .)
    OUT             reduce using rule 26 (retorno -> VARIABLE .)
    FUN             reduce using rule 26 (retorno -> VARIABLE .)
    IF              reduce using rule 26 (retorno -> VARIABLE .)
    DURING          reduce using rule 26 (retorno -> VARIABLE .)
    DO              reduce using rule 26 (retorno -> VARIABLE .)
    FIN             reduce using rule 26 (retorno -> VARIABLE .)
    END             reduce using rule 26 (retorno -> VARIABLE .)
    VARIABLE        shift and go to state 130
    NUMERO_ENTERO   shift and go to state 131
    NUMERO_REAL     shift and go to state 132
    CADENA          shift and go to state 133
    AGRUPACION_EC1  shift and go to state 135
    AGRUPACION_BLOQUE_EC1 shift and go to state 136
    INT             shift and go to state 86
    REAL            shift and go to state 87
    CAD             shift and go to state 88
    NULL            shift and go to state 45

  ! BACK            [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! CADENA          [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! OUT             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! FUN             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! IF              [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! DURING          [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! DO              [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! INT             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! REAL            [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! CAD             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! NULL            [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! FIN             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! END             [ reduce using rule 30 (retorno -> VARIABLE VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CADENA          [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! INT             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! REAL            [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CAD             [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NULL            [ reduce using rule 26 (retorno -> VARIABLE .) ]

    expresioncad                   shift and go to state 57
    tdadef                         shift and go to state 134

state 106

    (10) conjinstrucciones -> VARIABLE bloque . END

    END             shift and go to state 164


state 107

    (3) conjunto -> NOMBRE_VACIO FUNCTION_NAME conjinstrucciones .

    $end            reduce using rule 3 (conjunto -> NOMBRE_VACIO FUNCTION_NAME conjinstrucciones .)


state 108

    (4) conjunto -> NOMBRE_VACIO VARIABLE conjinstrucciones .

    $end            reduce using rule 4 (conjunto -> NOMBRE_VACIO VARIABLE conjinstrucciones .)


state 109

    (131) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . expresionint
    (132) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . expresionvar
    (133) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . lecturadatos
    (134) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . llamadafuncion
    (139) declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES . expresionreal
    (144) declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES . expresioncad
    (118) asignacionint -> VARIABLE ASIGNACION_VALORES . expresionint
    (119) asignacionint -> VARIABLE ASIGNACION_VALORES . lecturadatos
    (120) asignacionreal -> VARIABLE ASIGNACION_VALORES . expresionreal
    (121) asignacioncad -> VARIABLE ASIGNACION_VALORES . expresioncad
    (116) asignacionvar -> VARIABLE ASIGNACION_VALORES . expresionvar
    (117) asignacionvar -> VARIABLE ASIGNACION_VALORES . llamadafuncion
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (145) lecturadatos -> . IN expresioncad
    (146) lecturadatos -> . VARIABLE expresioncad
    (34) llamadafuncion -> . FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (35) llamadafuncion -> . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (36) llamadafuncion -> . VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 172
    VARIABLE        shift and go to state 165
    IN              shift and go to state 124
    FUNCTION_NAME   shift and go to state 126
    NUMERO_REAL     shift and go to state 125
    CADENA          shift and go to state 84

    expresionint                   shift and go to state 166
    expresionvar                   shift and go to state 167
    lecturadatos                   shift and go to state 168
    llamadafuncion                 shift and go to state 169
    expresionreal                  shift and go to state 170
    expresioncad                   shift and go to state 171

state 110

    (10) conjinstrucciones -> VARIABLE bloque END .
    (9) conjinstrucciones -> bloque END .

  ! reduce/reduce conflict for $end resolved using rule 9 (conjinstrucciones -> bloque END .)
    $end            reduce using rule 9 (conjinstrucciones -> bloque END .)

  ! $end            [ reduce using rule 10 (conjinstrucciones -> VARIABLE bloque END .) ]


state 111

    (162) expresioncad -> expresioncad SUMA . CADENA
    (163) expresioncad -> expresioncad SUMA . VARIABLE

    CADENA          shift and go to state 173
    VARIABLE        shift and go to state 174


state 112

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> tdadef FUNCTION_NAME . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    AGRUPACION_EC1  shift and go to state 175


state 113

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 176
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 114

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 177


state 115

    (146) lecturadatos -> VARIABLE . expresioncad
    (164) expresionvar -> VARIABLE .
    (36) llamadafuncion -> VARIABLE . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE

  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    SUMA            reduce using rule 164 (expresionvar -> VARIABLE .)
    RESTA           reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION1 reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION2 reduce using rule 164 (expresionvar -> VARIABLE .)
    DIVISION        reduce using rule 164 (expresionvar -> VARIABLE .)
    MODULO          reduce using rule 164 (expresionvar -> VARIABLE .)
    FIN             reduce using rule 164 (expresionvar -> VARIABLE .)
    BACK            reduce using rule 164 (expresionvar -> VARIABLE .)
    VARIABLE        reduce using rule 164 (expresionvar -> VARIABLE .)
    NUMERO_ENTERO   reduce using rule 164 (expresionvar -> VARIABLE .)
    NUMERO_REAL     reduce using rule 164 (expresionvar -> VARIABLE .)
    OUT             reduce using rule 164 (expresionvar -> VARIABLE .)
    FUN             reduce using rule 164 (expresionvar -> VARIABLE .)
    IF              reduce using rule 164 (expresionvar -> VARIABLE .)
    DURING          reduce using rule 164 (expresionvar -> VARIABLE .)
    DO              reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 164 (expresionvar -> VARIABLE .)
    INT             reduce using rule 164 (expresionvar -> VARIABLE .)
    REAL            reduce using rule 164 (expresionvar -> VARIABLE .)
    CAD             reduce using rule 164 (expresionvar -> VARIABLE .)
    NULL            reduce using rule 164 (expresionvar -> VARIABLE .)
    END             reduce using rule 164 (expresionvar -> VARIABLE .)
    $end            reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 164 (expresionvar -> VARIABLE .)
    BUT             reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_EC1  shift and go to state 179
    CADENA          shift and go to state 84

  ! CADENA          [ reduce using rule 164 (expresionvar -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 164 (expresionvar -> VARIABLE .) ]

    expresioncad                   shift and go to state 178

state 116

    (118) asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .
    (157) expresionint -> expresionint . operadorar NUMERO_ENTERO
    (158) expresionint -> expresionint . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    BACK            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    VARIABLE        reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_ENTERO   reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_REAL     reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    CADENA          reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    OUT             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    FUN             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    IF              reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_EC1  reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    DURING          reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    DO              reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    INT             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    REAL            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    CAD             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    NULL            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    END             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    $end            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    BUT             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 180

state 117

    (119) asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .

    FIN             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    BACK            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    VARIABLE        reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_ENTERO   reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_REAL     reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    CADENA          reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    OUT             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    FUN             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    IF              reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_EC1  reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    DURING          reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    DO              reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    INT             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    REAL            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    CAD             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    NULL            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    END             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    $end            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    BUT             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)


state 118

    (120) asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .
    (152) expresionreal -> expresionreal . operadorar NUMERO_REAL
    (153) expresionreal -> expresionreal . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    BACK            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    VARIABLE        reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_ENTERO   reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_REAL     reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    CADENA          reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    OUT             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    FUN             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    IF              reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_EC1  reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    DURING          reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    DO              reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    INT             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    REAL            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    CAD             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    NULL            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    END             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    $end            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    BUT             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 187

state 119

    (121) asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    BACK            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    VARIABLE        reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_ENTERO   reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_REAL     reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    CADENA          reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    OUT             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    FUN             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    IF              reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_EC1  reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    DURING          reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    DO              reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    INT             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    REAL            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    CAD             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    NULL            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    END             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    $end            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    BUT             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    SUMA            shift and go to state 111


state 120

    (116) asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    BACK            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    VARIABLE        reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_ENTERO   reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_REAL     reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    CADENA          reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    OUT             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    FUN             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    IF              reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_EC1  reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    DURING          reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    DO              reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    INT             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    REAL            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    CAD             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    NULL            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    END             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    $end            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    BUT             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 188

state 121

    (117) asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .

    FIN             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BACK            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    VARIABLE        reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_ENTERO   reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_REAL     reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CADENA          reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    OUT             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FUN             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    IF              reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_EC1  reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DURING          reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DO              reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    INT             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    REAL            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CAD             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NULL            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    END             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    $end            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BUT             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)


state 122

    (156) expresionint -> NUMERO_ENTERO .

    SUMA            reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    RESTA           reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    MULTIPLICACION1 reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    MULTIPLICACION2 reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    DIVISION        reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    MODULO          reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    FIN             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    BACK            reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    VARIABLE        reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    CADENA          reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    OUT             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    FUN             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    IF              reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    DURING          reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    DO              reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    INT             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    REAL            reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    CAD             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    NULL            reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    END             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    $end            reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    BUT             reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    AGRUPACION_EC2  reduce using rule 156 (expresionint -> NUMERO_ENTERO .)


state 123

    (160) expresionint -> AGRUPACION_EC1 . expresionint AGRUPACION_EC2
    (155) expresionreal -> AGRUPACION_EC1 . expresionreal AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (35) llamadafuncion -> AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    NUMERO_ENTERO   shift and go to state 194
    AGRUPACION_EC1  shift and go to state 189
    NUMERO_REAL     shift and go to state 196
    VARIABLE        shift and go to state 195
    CADENA          shift and go to state 198

    expresionint                   shift and go to state 190
    expresionreal                  shift and go to state 191
    expresionvar                   shift and go to state 192
    parametrosl                    shift and go to state 193
    entrada                        shift and go to state 197

state 124

    (145) lecturadatos -> IN . expresioncad
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE

    CADENA          shift and go to state 84

    expresioncad                   shift and go to state 199

state 125

    (151) expresionreal -> NUMERO_REAL .

    SUMA            reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    RESTA           reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    MULTIPLICACION1 reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    MULTIPLICACION2 reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    DIVISION        reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    MODULO          reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    FIN             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    BACK            reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    VARIABLE        reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    CADENA          reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    OUT             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    FUN             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    IF              reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    DURING          reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    DO              reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    INT             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    REAL            reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    CAD             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    NULL            reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    END             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    $end            reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    BUT             reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    AGRUPACION_EC2  reduce using rule 151 (expresionreal -> NUMERO_REAL .)


state 126

    (34) llamadafuncion -> FUNCTION_NAME . AGRUPACION_EC1 parametrosl AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 200


state 127

    (8) conjinstrucciones -> BEGIN bloque END .

    $end            reduce using rule 8 (conjinstrucciones -> BEGIN bloque END .)


state 128

    (13) conjinstrucciones -> BEGIN bloque VARIABLE .

    $end            reduce using rule 13 (conjinstrucciones -> BEGIN bloque VARIABLE .)


state 129

    (12) conjinstrucciones -> BEGIN retorno bloque .
    (100) bloque -> retorno bloque .

  ! reduce/reduce conflict for $end resolved using rule 12 (conjinstrucciones -> BEGIN retorno bloque .)
    $end            reduce using rule 12 (conjinstrucciones -> BEGIN retorno bloque .)
    END             reduce using rule 100 (bloque -> retorno bloque .)
    VARIABLE        reduce using rule 100 (bloque -> retorno bloque .)

  ! $end            [ reduce using rule 100 (bloque -> retorno bloque .) ]


state 130

    (30) retorno -> VARIABLE VARIABLE .
    (131) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionint
    (132) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionvar
    (133) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> VARIABLE VARIABLE . ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> VARIABLE VARIABLE . ASIGNACION_VALORES expresionreal
    (144) declaracioncad -> VARIABLE VARIABLE . ASIGNACION_VALORES expresioncad

    BACK            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    VARIABLE        reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    NUMERO_ENTERO   reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    NUMERO_REAL     reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    CADENA          reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    OUT             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    FUN             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    IF              reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    AGRUPACION_EC1  reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    DURING          reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    DO              reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    INT             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    REAL            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    CAD             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    NULL            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    FIN             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    $end            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    END             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    BUT             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    ASIGNACION_VALORES shift and go to state 201


state 131

    (31) retorno -> VARIABLE NUMERO_ENTERO .

    BACK            reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    VARIABLE        reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    CADENA          reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    OUT             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    FUN             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    IF              reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    DURING          reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    DO              reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    INT             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    REAL            reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    CAD             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    NULL            reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    FIN             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    $end            reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    END             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)
    BUT             reduce using rule 31 (retorno -> VARIABLE NUMERO_ENTERO .)


state 132

    (32) retorno -> VARIABLE NUMERO_REAL .

    BACK            reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    VARIABLE        reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    CADENA          reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    OUT             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    FUN             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    IF              reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    DURING          reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    DO              reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    INT             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    REAL            reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    CAD             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    NULL            reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    FIN             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    $end            reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    END             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)
    BUT             reduce using rule 32 (retorno -> VARIABLE NUMERO_REAL .)


state 133

    (33) retorno -> VARIABLE CADENA .
    (161) expresioncad -> CADENA .

  ! reduce/reduce conflict for FIN resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for BACK resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for CADENA resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for OUT resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for FUN resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for IF resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for DURING resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for DO resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for INT resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for REAL resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for CAD resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for NULL resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for END resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for $end resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved using rule 33 (retorno -> VARIABLE CADENA .)
  ! reduce/reduce conflict for BUT resolved using rule 33 (retorno -> VARIABLE CADENA .)
    BACK            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    VARIABLE        reduce using rule 33 (retorno -> VARIABLE CADENA .)
    NUMERO_ENTERO   reduce using rule 33 (retorno -> VARIABLE CADENA .)
    NUMERO_REAL     reduce using rule 33 (retorno -> VARIABLE CADENA .)
    CADENA          reduce using rule 33 (retorno -> VARIABLE CADENA .)
    OUT             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    FUN             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    IF              reduce using rule 33 (retorno -> VARIABLE CADENA .)
    AGRUPACION_EC1  reduce using rule 33 (retorno -> VARIABLE CADENA .)
    DURING          reduce using rule 33 (retorno -> VARIABLE CADENA .)
    DO              reduce using rule 33 (retorno -> VARIABLE CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 33 (retorno -> VARIABLE CADENA .)
    INT             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    REAL            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    CAD             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    NULL            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    FIN             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    $end            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    END             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 33 (retorno -> VARIABLE CADENA .)
    BUT             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    SUMA            reduce using rule 161 (expresioncad -> CADENA .)

  ! FIN             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! BACK            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! VARIABLE        [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! NUMERO_ENTERO   [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! NUMERO_REAL     [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! CADENA          [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! OUT             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! FUN             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! IF              [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! AGRUPACION_EC1  [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! DURING          [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! DO              [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! INT             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! REAL            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! CAD             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! NULL            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! END             [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! $end            [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 161 (expresioncad -> CADENA .) ]
  ! BUT             [ reduce using rule 161 (expresioncad -> CADENA .) ]


state 134

    (16) iniciofuncion -> VARIABLE tdadef . FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    FUNCTION_NAME   shift and go to state 202


state 135

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 203
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 136

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 204
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 137

    (19) funcion -> iniciofuncion bloque finfuncion .

    BACK            reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    VARIABLE        reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    NUMERO_ENTERO   reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    NUMERO_REAL     reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    CADENA          reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    OUT             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    FUN             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    IF              reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    AGRUPACION_EC1  reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    DURING          reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    DO              reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    INT             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    REAL            reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    CAD             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    NULL            reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    FIN             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    END             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    $end            reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)
    BUT             reduce using rule 19 (funcion -> iniciofuncion bloque finfuncion .)


state 138

    (20) finfuncion -> retorno . AGRUPACION_BLOQUE_EC2
    (21) finfuncion -> retorno .

  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved as shift
    AGRUPACION_BLOQUE_EC2 shift and go to state 205
    BACK            reduce using rule 21 (finfuncion -> retorno .)
    VARIABLE        reduce using rule 21 (finfuncion -> retorno .)
    NUMERO_ENTERO   reduce using rule 21 (finfuncion -> retorno .)
    NUMERO_REAL     reduce using rule 21 (finfuncion -> retorno .)
    CADENA          reduce using rule 21 (finfuncion -> retorno .)
    OUT             reduce using rule 21 (finfuncion -> retorno .)
    FUN             reduce using rule 21 (finfuncion -> retorno .)
    IF              reduce using rule 21 (finfuncion -> retorno .)
    AGRUPACION_EC1  reduce using rule 21 (finfuncion -> retorno .)
    DURING          reduce using rule 21 (finfuncion -> retorno .)
    DO              reduce using rule 21 (finfuncion -> retorno .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 21 (finfuncion -> retorno .)
    INT             reduce using rule 21 (finfuncion -> retorno .)
    REAL            reduce using rule 21 (finfuncion -> retorno .)
    CAD             reduce using rule 21 (finfuncion -> retorno .)
    NULL            reduce using rule 21 (finfuncion -> retorno .)
    FIN             reduce using rule 21 (finfuncion -> retorno .)
    END             reduce using rule 21 (finfuncion -> retorno .)
    $end            reduce using rule 21 (finfuncion -> retorno .)
    BUT             reduce using rule 21 (finfuncion -> retorno .)

  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 21 (finfuncion -> retorno .) ]


state 139

    (26) retorno -> VARIABLE .
    (30) retorno -> VARIABLE . VARIABLE
    (31) retorno -> VARIABLE . NUMERO_ENTERO
    (32) retorno -> VARIABLE . NUMERO_REAL
    (33) retorno -> VARIABLE . CADENA

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    AGRUPACION_BLOQUE_EC2 reduce using rule 26 (retorno -> VARIABLE .)
    BACK            reduce using rule 26 (retorno -> VARIABLE .)
    OUT             reduce using rule 26 (retorno -> VARIABLE .)
    FUN             reduce using rule 26 (retorno -> VARIABLE .)
    IF              reduce using rule 26 (retorno -> VARIABLE .)
    AGRUPACION_EC1  reduce using rule 26 (retorno -> VARIABLE .)
    DURING          reduce using rule 26 (retorno -> VARIABLE .)
    DO              reduce using rule 26 (retorno -> VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 26 (retorno -> VARIABLE .)
    INT             reduce using rule 26 (retorno -> VARIABLE .)
    REAL            reduce using rule 26 (retorno -> VARIABLE .)
    CAD             reduce using rule 26 (retorno -> VARIABLE .)
    NULL            reduce using rule 26 (retorno -> VARIABLE .)
    FIN             reduce using rule 26 (retorno -> VARIABLE .)
    END             reduce using rule 26 (retorno -> VARIABLE .)
    $end            reduce using rule 26 (retorno -> VARIABLE .)
    BUT             reduce using rule 26 (retorno -> VARIABLE .)
    VARIABLE        shift and go to state 206
    NUMERO_ENTERO   shift and go to state 131
    NUMERO_REAL     shift and go to state 132
    CADENA          shift and go to state 207

  ! VARIABLE        [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_ENTERO   [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! NUMERO_REAL     [ reduce using rule 26 (retorno -> VARIABLE .) ]
  ! CADENA          [ reduce using rule 26 (retorno -> VARIABLE .) ]


state 140

    (14) iniciofuncion -> FUN tdadef FUNCTION_NAME . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> FUN tdadef FUNCTION_NAME . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 208


state 141

    (17) iniciofuncion -> FUN tdadef VARIABLE . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    AGRUPACION_EC1  shift and go to state 209


state 142

    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (37) parametrosfun -> . tda VARIABLE
    (38) parametrosfun -> . parametrosfun SEPARADOR tda VARIABLE
    (45) tda -> . INT
    (46) tda -> . REAL
    (47) tda -> . CAD

    INT             shift and go to state 212
    REAL            shift and go to state 213
    CAD             shift and go to state 214

    parametrosfun                  shift and go to state 210
    tda                            shift and go to state 211

state 143

    (82) parametroscontrol -> AGRUPACION_EC1 tdacontrol . operadorrel tdacontrol AGRUPACION_EC2
    (90) operadorrel -> . IGUAL
    (91) operadorrel -> . DIFERENTE
    (92) operadorrel -> . MENOR
    (93) operadorrel -> . MAYOR
    (94) operadorrel -> . MAYOR_IGUAL
    (95) operadorrel -> . MENOR_IGUAL

    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOR           shift and go to state 152
    MAYOR           shift and go to state 153
    MAYOR_IGUAL     shift and go to state 154
    MENOR_IGUAL     shift and go to state 155

    operadorrel                    shift and go to state 215

state 144

    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 216


state 145

    (83) parametroscontrol -> parametroscontrol operadorlog . tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol operadorlog . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 218
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 217
    valor                          shift and go to state 93

state 146

    (87) operadorlog -> Y_LOGICO .

    AGRUPACION_EC1  reduce using rule 87 (operadorlog -> Y_LOGICO .)
    VARIABLE        reduce using rule 87 (operadorlog -> Y_LOGICO .)
    NUMERO_ENTERO   reduce using rule 87 (operadorlog -> Y_LOGICO .)
    NUMERO_REAL     reduce using rule 87 (operadorlog -> Y_LOGICO .)


state 147

    (88) operadorlog -> O_LOGICO .

    AGRUPACION_EC1  reduce using rule 88 (operadorlog -> O_LOGICO .)
    VARIABLE        reduce using rule 88 (operadorlog -> O_LOGICO .)
    NUMERO_ENTERO   reduce using rule 88 (operadorlog -> O_LOGICO .)
    NUMERO_REAL     reduce using rule 88 (operadorlog -> O_LOGICO .)


state 148

    (89) operadorlog -> NEGACION .

    AGRUPACION_EC1  reduce using rule 89 (operadorlog -> NEGACION .)
    VARIABLE        reduce using rule 89 (operadorlog -> NEGACION .)
    NUMERO_ENTERO   reduce using rule 89 (operadorlog -> NEGACION .)
    NUMERO_REAL     reduce using rule 89 (operadorlog -> NEGACION .)


state 149

    (81) parametroscontrol -> tdacontrol operadorrel . tdacontrol
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 219
    valor                          shift and go to state 93

state 150

    (90) operadorrel -> IGUAL .

    VARIABLE        reduce using rule 90 (operadorrel -> IGUAL .)
    NUMERO_ENTERO   reduce using rule 90 (operadorrel -> IGUAL .)
    NUMERO_REAL     reduce using rule 90 (operadorrel -> IGUAL .)


state 151

    (91) operadorrel -> DIFERENTE .

    VARIABLE        reduce using rule 91 (operadorrel -> DIFERENTE .)
    NUMERO_ENTERO   reduce using rule 91 (operadorrel -> DIFERENTE .)
    NUMERO_REAL     reduce using rule 91 (operadorrel -> DIFERENTE .)


state 152

    (92) operadorrel -> MENOR .

    VARIABLE        reduce using rule 92 (operadorrel -> MENOR .)
    NUMERO_ENTERO   reduce using rule 92 (operadorrel -> MENOR .)
    NUMERO_REAL     reduce using rule 92 (operadorrel -> MENOR .)


state 153

    (93) operadorrel -> MAYOR .

    VARIABLE        reduce using rule 93 (operadorrel -> MAYOR .)
    NUMERO_ENTERO   reduce using rule 93 (operadorrel -> MAYOR .)
    NUMERO_REAL     reduce using rule 93 (operadorrel -> MAYOR .)


state 154

    (94) operadorrel -> MAYOR_IGUAL .

    VARIABLE        reduce using rule 94 (operadorrel -> MAYOR_IGUAL .)
    NUMERO_ENTERO   reduce using rule 94 (operadorrel -> MAYOR_IGUAL .)
    NUMERO_REAL     reduce using rule 94 (operadorrel -> MAYOR_IGUAL .)


state 155

    (95) operadorrel -> MENOR_IGUAL .

    VARIABLE        reduce using rule 95 (operadorrel -> MENOR_IGUAL .)
    NUMERO_ENTERO   reduce using rule 95 (operadorrel -> MENOR_IGUAL .)
    NUMERO_REAL     reduce using rule 95 (operadorrel -> MENOR_IGUAL .)


state 156

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    DURING          shift and go to state 220


state 157

    (67) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 221
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 158

    (62) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 222
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 159

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 223
    DURING          shift and go to state 224


state 160

    (60) estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    DURING          shift and go to state 225


state 161

    (127) declaracionint -> INT VARIABLE ASIGNACION_VALORES . expresionint
    (128) declaracionint -> INT VARIABLE ASIGNACION_VALORES . expresionvar
    (129) declaracionint -> INT VARIABLE ASIGNACION_VALORES . lecturadatos
    (130) declaracionint -> INT VARIABLE ASIGNACION_VALORES . llamadafuncion
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (145) lecturadatos -> . IN expresioncad
    (146) lecturadatos -> . VARIABLE expresioncad
    (34) llamadafuncion -> . FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (35) llamadafuncion -> . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (36) llamadafuncion -> . VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 230
    VARIABLE        shift and go to state 165
    IN              shift and go to state 124
    FUNCTION_NAME   shift and go to state 126

    expresionint                   shift and go to state 226
    expresionvar                   shift and go to state 227
    lecturadatos                   shift and go to state 228
    llamadafuncion                 shift and go to state 229

state 162

    (135) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES . expresionreal
    (136) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES . expresionvar
    (137) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES . lecturadatos
    (138) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES . llamadafuncion
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (145) lecturadatos -> . IN expresioncad
    (146) lecturadatos -> . VARIABLE expresioncad
    (34) llamadafuncion -> . FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (35) llamadafuncion -> . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (36) llamadafuncion -> . VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2

    NUMERO_REAL     shift and go to state 125
    AGRUPACION_EC1  shift and go to state 235
    VARIABLE        shift and go to state 165
    IN              shift and go to state 124
    FUNCTION_NAME   shift and go to state 126

    expresionreal                  shift and go to state 231
    expresionvar                   shift and go to state 232
    lecturadatos                   shift and go to state 233
    llamadafuncion                 shift and go to state 234

state 163

    (140) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES . expresioncad
    (141) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES . expresionvar
    (142) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES . lecturadatos
    (143) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES . llamadafuncion
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (145) lecturadatos -> . IN expresioncad
    (146) lecturadatos -> . VARIABLE expresioncad
    (34) llamadafuncion -> . FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (35) llamadafuncion -> . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (36) llamadafuncion -> . VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2

    CADENA          shift and go to state 84
    VARIABLE        shift and go to state 165
    AGRUPACION_EC1  shift and go to state 240
    IN              shift and go to state 124
    FUNCTION_NAME   shift and go to state 126

    expresioncad                   shift and go to state 236
    expresionvar                   shift and go to state 237
    lecturadatos                   shift and go to state 238
    llamadafuncion                 shift and go to state 239

state 164

    (10) conjinstrucciones -> VARIABLE bloque END .

    $end            reduce using rule 10 (conjinstrucciones -> VARIABLE bloque END .)


state 165

    (164) expresionvar -> VARIABLE .
    (146) lecturadatos -> VARIABLE . expresioncad
    (36) llamadafuncion -> VARIABLE . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE

  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    SUMA            reduce using rule 164 (expresionvar -> VARIABLE .)
    RESTA           reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION1 reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION2 reduce using rule 164 (expresionvar -> VARIABLE .)
    DIVISION        reduce using rule 164 (expresionvar -> VARIABLE .)
    MODULO          reduce using rule 164 (expresionvar -> VARIABLE .)
    FIN             reduce using rule 164 (expresionvar -> VARIABLE .)
    BACK            reduce using rule 164 (expresionvar -> VARIABLE .)
    VARIABLE        reduce using rule 164 (expresionvar -> VARIABLE .)
    NUMERO_ENTERO   reduce using rule 164 (expresionvar -> VARIABLE .)
    NUMERO_REAL     reduce using rule 164 (expresionvar -> VARIABLE .)
    OUT             reduce using rule 164 (expresionvar -> VARIABLE .)
    FUN             reduce using rule 164 (expresionvar -> VARIABLE .)
    IF              reduce using rule 164 (expresionvar -> VARIABLE .)
    DURING          reduce using rule 164 (expresionvar -> VARIABLE .)
    DO              reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 164 (expresionvar -> VARIABLE .)
    INT             reduce using rule 164 (expresionvar -> VARIABLE .)
    REAL            reduce using rule 164 (expresionvar -> VARIABLE .)
    CAD             reduce using rule 164 (expresionvar -> VARIABLE .)
    NULL            reduce using rule 164 (expresionvar -> VARIABLE .)
    END             reduce using rule 164 (expresionvar -> VARIABLE .)
    $end            reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 164 (expresionvar -> VARIABLE .)
    BUT             reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_EC1  shift and go to state 179
    CADENA          shift and go to state 84

  ! CADENA          [ reduce using rule 164 (expresionvar -> VARIABLE .) ]
  ! AGRUPACION_EC1  [ reduce using rule 164 (expresionvar -> VARIABLE .) ]

    expresioncad                   shift and go to state 178

state 166

    (131) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .
    (118) asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .
    (157) expresionint -> expresionint . operadorar NUMERO_ENTERO
    (158) expresionint -> expresionint . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

  ! reduce/reduce conflict for FIN resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for BACK resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for CADENA resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for OUT resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for FUN resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for IF resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for DURING resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for DO resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for INT resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for REAL resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for CAD resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for NULL resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
  ! reduce/reduce conflict for END resolved using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    FIN             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    BACK            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    VARIABLE        reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_ENTERO   reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_REAL     reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    CADENA          reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    OUT             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    FUN             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    IF              reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_EC1  reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    DURING          reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    DO              reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    INT             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    REAL            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    CAD             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    NULL            reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    END             reduce using rule 118 (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

  ! FIN             [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! BACK            [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! VARIABLE        [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! NUMERO_ENTERO   [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! NUMERO_REAL     [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! CADENA          [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! OUT             [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! FUN             [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! IF              [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! AGRUPACION_EC1  [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! DURING          [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! DO              [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! INT             [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! REAL            [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! CAD             [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! NULL            [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]
  ! END             [ reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .) ]

    operadorar                     shift and go to state 180

state 167

    (132) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .
    (116) asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

  ! reduce/reduce conflict for FIN resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for BACK resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for CADENA resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for OUT resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for FUN resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for IF resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for DURING resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for DO resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for INT resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for REAL resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for CAD resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for NULL resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
  ! reduce/reduce conflict for END resolved using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    FIN             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    BACK            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    VARIABLE        reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_ENTERO   reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_REAL     reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    CADENA          reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    OUT             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    FUN             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    IF              reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_EC1  reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    DURING          reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    DO              reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    INT             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    REAL            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    CAD             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    NULL            reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    END             reduce using rule 116 (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

  ! FIN             [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! BACK            [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! VARIABLE        [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! NUMERO_ENTERO   [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! NUMERO_REAL     [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! CADENA          [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! OUT             [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! FUN             [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! IF              [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! AGRUPACION_EC1  [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! DURING          [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! DO              [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! INT             [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! REAL            [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! CAD             [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! NULL            [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]
  ! END             [ reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .) ]

    operadorar                     shift and go to state 241

state 168

    (133) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .
    (119) asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .

  ! reduce/reduce conflict for FIN resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for BACK resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for CADENA resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for OUT resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for FUN resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for IF resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for DURING resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for DO resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for INT resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for REAL resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for CAD resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for NULL resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
  ! reduce/reduce conflict for END resolved using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    FIN             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    BACK            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    VARIABLE        reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_ENTERO   reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_REAL     reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    CADENA          reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    OUT             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    FUN             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    IF              reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_EC1  reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    DURING          reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    DO              reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    INT             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    REAL            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    CAD             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    NULL            reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)
    END             reduce using rule 119 (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos .)

  ! FIN             [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! BACK            [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! VARIABLE        [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! NUMERO_ENTERO   [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! NUMERO_REAL     [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! CADENA          [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! OUT             [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! FUN             [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! IF              [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! AGRUPACION_EC1  [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! DURING          [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! DO              [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! INT             [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! REAL            [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! CAD             [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! NULL            [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]
  ! END             [ reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .) ]


state 169

    (134) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .
    (117) asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .

  ! reduce/reduce conflict for FIN resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for BACK resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for CADENA resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for OUT resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for FUN resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for IF resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for DURING resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for DO resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for INT resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for REAL resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for CAD resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for NULL resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
  ! reduce/reduce conflict for END resolved using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FIN             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BACK            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    VARIABLE        reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_ENTERO   reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_REAL     reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CADENA          reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    OUT             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FUN             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    IF              reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_EC1  reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DURING          reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DO              reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    INT             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    REAL            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CAD             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NULL            reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)
    END             reduce using rule 117 (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion .)

  ! FIN             [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! BACK            [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! VARIABLE        [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! NUMERO_ENTERO   [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! NUMERO_REAL     [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! CADENA          [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! OUT             [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! FUN             [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! IF              [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! AGRUPACION_EC1  [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! DURING          [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! DO              [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! INT             [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! REAL            [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! CAD             [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! NULL            [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]
  ! END             [ reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .) ]


state 170

    (139) declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .
    (120) asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .
    (152) expresionreal -> expresionreal . operadorar NUMERO_REAL
    (153) expresionreal -> expresionreal . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

  ! reduce/reduce conflict for FIN resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for BACK resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for CADENA resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for OUT resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for FUN resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for IF resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for DURING resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for DO resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for INT resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for REAL resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for CAD resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for NULL resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
  ! reduce/reduce conflict for END resolved using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    FIN             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    BACK            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    VARIABLE        reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_ENTERO   reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_REAL     reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    CADENA          reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    OUT             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    FUN             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    IF              reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_EC1  reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    DURING          reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    DO              reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    INT             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    REAL            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    CAD             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    NULL            reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    END             reduce using rule 120 (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

  ! FIN             [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! BACK            [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! VARIABLE        [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! NUMERO_ENTERO   [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! NUMERO_REAL     [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! CADENA          [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! OUT             [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! FUN             [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! IF              [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! AGRUPACION_EC1  [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! DURING          [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! DO              [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! INT             [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! REAL            [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! CAD             [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! NULL            [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]
  ! END             [ reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .) ]

    operadorar                     shift and go to state 187

state 171

    (144) declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .
    (121) asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

  ! reduce/reduce conflict for FIN resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for BACK resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for CADENA resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for OUT resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for FUN resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for IF resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for DURING resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for DO resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for INT resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for REAL resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for CAD resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for NULL resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
  ! reduce/reduce conflict for END resolved using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    FIN             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    BACK            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    VARIABLE        reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_ENTERO   reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_REAL     reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    CADENA          reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    OUT             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    FUN             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    IF              reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_EC1  reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    DURING          reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    DO              reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    INT             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    REAL            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    CAD             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    NULL            reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    END             reduce using rule 121 (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad .)
    SUMA            shift and go to state 111

  ! FIN             [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! BACK            [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! VARIABLE        [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! NUMERO_ENTERO   [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! NUMERO_REAL     [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! CADENA          [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! OUT             [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! FUN             [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! IF              [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! AGRUPACION_EC1  [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! DURING          [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! DO              [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! INT             [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! REAL            [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! CAD             [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! NULL            [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]
  ! END             [ reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .) ]


state 172

    (160) expresionint -> AGRUPACION_EC1 . expresionint AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (35) llamadafuncion -> AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (155) expresionreal -> AGRUPACION_EC1 . expresionreal AGRUPACION_EC2
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    NUMERO_ENTERO   shift and go to state 194
    AGRUPACION_EC1  shift and go to state 242
    VARIABLE        shift and go to state 195
    NUMERO_REAL     shift and go to state 196
    CADENA          shift and go to state 198

    expresionint                   shift and go to state 190
    expresionvar                   shift and go to state 243
    parametrosl                    shift and go to state 193
    expresionreal                  shift and go to state 191
    entrada                        shift and go to state 197

state 173

    (162) expresioncad -> expresioncad SUMA CADENA .

    SUMA            reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    FIN             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    BACK            reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    VARIABLE        reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    NUMERO_ENTERO   reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    NUMERO_REAL     reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    CADENA          reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    OUT             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    FUN             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    IF              reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    AGRUPACION_EC1  reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    DURING          reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    DO              reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    INT             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    REAL            reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    CAD             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    NULL            reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    END             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    $end            reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)
    BUT             reduce using rule 162 (expresioncad -> expresioncad SUMA CADENA .)


state 174

    (163) expresioncad -> expresioncad SUMA VARIABLE .

    SUMA            reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    FIN             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    BACK            reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    VARIABLE        reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    NUMERO_ENTERO   reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    NUMERO_REAL     reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    CADENA          reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    OUT             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    FUN             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    IF              reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    AGRUPACION_EC1  reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    DURING          reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    DO              reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    INT             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    REAL            reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    CAD             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    NULL            reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    END             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    $end            reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)
    BUT             reduce using rule 163 (expresioncad -> expresioncad SUMA VARIABLE .)


state 175

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (37) parametrosfun -> . tda VARIABLE
    (38) parametrosfun -> . parametrosfun SEPARADOR tda VARIABLE
    (45) tda -> . INT
    (46) tda -> . REAL
    (47) tda -> . CAD

    INT             shift and go to state 212
    REAL            shift and go to state 213
    CAD             shift and go to state 214

    parametrosfun                  shift and go to state 244
    tda                            shift and go to state 211

state 176

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 245


state 177

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    DURING          shift and go to state 246


state 178

    (146) lecturadatos -> VARIABLE expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    BACK            reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    VARIABLE        reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    NUMERO_ENTERO   reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    NUMERO_REAL     reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    CADENA          reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    OUT             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    FUN             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    IF              reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    AGRUPACION_EC1  reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    DURING          reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    DO              reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    INT             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    REAL            reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    CAD             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    NULL            reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    END             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    $end            reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    BUT             reduce using rule 146 (lecturadatos -> VARIABLE expresioncad .)
    SUMA            shift and go to state 111


state 179

    (36) llamadafuncion -> VARIABLE AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    VARIABLE        shift and go to state 247
    NUMERO_ENTERO   shift and go to state 249
    NUMERO_REAL     shift and go to state 250
    CADENA          shift and go to state 198

    parametrosl                    shift and go to state 248
    entrada                        shift and go to state 197

state 180

    (157) expresionint -> expresionint operadorar . NUMERO_ENTERO
    (158) expresionint -> expresionint operadorar . VARIABLE

    NUMERO_ENTERO   shift and go to state 251
    VARIABLE        shift and go to state 252


state 181

    (167) operadorar -> SUMA .

    NUMERO_ENTERO   reduce using rule 167 (operadorar -> SUMA .)
    VARIABLE        reduce using rule 167 (operadorar -> SUMA .)
    NUMERO_REAL     reduce using rule 167 (operadorar -> SUMA .)


state 182

    (168) operadorar -> RESTA .

    NUMERO_ENTERO   reduce using rule 168 (operadorar -> RESTA .)
    VARIABLE        reduce using rule 168 (operadorar -> RESTA .)
    NUMERO_REAL     reduce using rule 168 (operadorar -> RESTA .)


state 183

    (169) operadorar -> MULTIPLICACION1 .

    NUMERO_ENTERO   reduce using rule 169 (operadorar -> MULTIPLICACION1 .)
    VARIABLE        reduce using rule 169 (operadorar -> MULTIPLICACION1 .)
    NUMERO_REAL     reduce using rule 169 (operadorar -> MULTIPLICACION1 .)


state 184

    (170) operadorar -> MULTIPLICACION2 .

    NUMERO_ENTERO   reduce using rule 170 (operadorar -> MULTIPLICACION2 .)
    VARIABLE        reduce using rule 170 (operadorar -> MULTIPLICACION2 .)
    NUMERO_REAL     reduce using rule 170 (operadorar -> MULTIPLICACION2 .)


state 185

    (171) operadorar -> DIVISION .

    NUMERO_ENTERO   reduce using rule 171 (operadorar -> DIVISION .)
    VARIABLE        reduce using rule 171 (operadorar -> DIVISION .)
    NUMERO_REAL     reduce using rule 171 (operadorar -> DIVISION .)


state 186

    (172) operadorar -> MODULO .

    NUMERO_ENTERO   reduce using rule 172 (operadorar -> MODULO .)
    VARIABLE        reduce using rule 172 (operadorar -> MODULO .)
    NUMERO_REAL     reduce using rule 172 (operadorar -> MODULO .)


state 187

    (152) expresionreal -> expresionreal operadorar . NUMERO_REAL
    (153) expresionreal -> expresionreal operadorar . VARIABLE

    NUMERO_REAL     shift and go to state 253
    VARIABLE        shift and go to state 254


state 188

    (159) expresionint -> expresionvar operadorar . NUMERO_ENTERO
    (154) expresionreal -> expresionvar operadorar . NUMERO_REAL
    (165) expresionvar -> expresionvar operadorar . VARIABLE

    NUMERO_ENTERO   shift and go to state 255
    NUMERO_REAL     shift and go to state 256
    VARIABLE        shift and go to state 257


state 189

    (160) expresionint -> AGRUPACION_EC1 . expresionint AGRUPACION_EC2
    (155) expresionreal -> AGRUPACION_EC1 . expresionreal AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 189
    NUMERO_REAL     shift and go to state 125
    VARIABLE        shift and go to state 258

    expresionint                   shift and go to state 190
    expresionreal                  shift and go to state 191
    expresionvar                   shift and go to state 192

state 190

    (160) expresionint -> AGRUPACION_EC1 expresionint . AGRUPACION_EC2
    (157) expresionint -> expresionint . operadorar NUMERO_ENTERO
    (158) expresionint -> expresionint . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 259
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 180

state 191

    (155) expresionreal -> AGRUPACION_EC1 expresionreal . AGRUPACION_EC2
    (152) expresionreal -> expresionreal . operadorar NUMERO_REAL
    (153) expresionreal -> expresionreal . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 260
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 187

state 192

    (166) expresionvar -> AGRUPACION_EC1 expresionvar . AGRUPACION_EC2
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 261
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 188

state 193

    (35) llamadafuncion -> AGRUPACION_EC1 parametrosl . AGRUPACION_EC2
    (44) parametrosl -> parametrosl . SEPARADOR entrada

    AGRUPACION_EC2  shift and go to state 262
    SEPARADOR       shift and go to state 263


state 194

    (156) expresionint -> NUMERO_ENTERO .
    (40) entrada -> NUMERO_ENTERO .

  ! reduce/reduce conflict for AGRUPACION_EC2 resolved using rule 40 (entrada -> NUMERO_ENTERO .)
    SUMA            reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    RESTA           reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    MULTIPLICACION1 reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    MULTIPLICACION2 reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    DIVISION        reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    MODULO          reduce using rule 156 (expresionint -> NUMERO_ENTERO .)
    AGRUPACION_EC2  reduce using rule 40 (entrada -> NUMERO_ENTERO .)
    SEPARADOR       reduce using rule 40 (entrada -> NUMERO_ENTERO .)

  ! AGRUPACION_EC2  [ reduce using rule 156 (expresionint -> NUMERO_ENTERO .) ]


state 195

    (164) expresionvar -> VARIABLE .
    (39) entrada -> VARIABLE .

  ! reduce/reduce conflict for AGRUPACION_EC2 resolved using rule 39 (entrada -> VARIABLE .)
    SUMA            reduce using rule 164 (expresionvar -> VARIABLE .)
    RESTA           reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION1 reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION2 reduce using rule 164 (expresionvar -> VARIABLE .)
    DIVISION        reduce using rule 164 (expresionvar -> VARIABLE .)
    MODULO          reduce using rule 164 (expresionvar -> VARIABLE .)
    AGRUPACION_EC2  reduce using rule 39 (entrada -> VARIABLE .)
    SEPARADOR       reduce using rule 39 (entrada -> VARIABLE .)

  ! AGRUPACION_EC2  [ reduce using rule 164 (expresionvar -> VARIABLE .) ]


state 196

    (151) expresionreal -> NUMERO_REAL .
    (41) entrada -> NUMERO_REAL .

  ! reduce/reduce conflict for AGRUPACION_EC2 resolved using rule 41 (entrada -> NUMERO_REAL .)
    SUMA            reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    RESTA           reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    MULTIPLICACION1 reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    MULTIPLICACION2 reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    DIVISION        reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    MODULO          reduce using rule 151 (expresionreal -> NUMERO_REAL .)
    AGRUPACION_EC2  reduce using rule 41 (entrada -> NUMERO_REAL .)
    SEPARADOR       reduce using rule 41 (entrada -> NUMERO_REAL .)

  ! AGRUPACION_EC2  [ reduce using rule 151 (expresionreal -> NUMERO_REAL .) ]


state 197

    (43) parametrosl -> entrada .

    AGRUPACION_EC2  reduce using rule 43 (parametrosl -> entrada .)
    SEPARADOR       reduce using rule 43 (parametrosl -> entrada .)


state 198

    (42) entrada -> CADENA .

    AGRUPACION_EC2  reduce using rule 42 (entrada -> CADENA .)
    SEPARADOR       reduce using rule 42 (entrada -> CADENA .)


state 199

    (145) lecturadatos -> IN expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    BACK            reduce using rule 145 (lecturadatos -> IN expresioncad .)
    VARIABLE        reduce using rule 145 (lecturadatos -> IN expresioncad .)
    NUMERO_ENTERO   reduce using rule 145 (lecturadatos -> IN expresioncad .)
    NUMERO_REAL     reduce using rule 145 (lecturadatos -> IN expresioncad .)
    CADENA          reduce using rule 145 (lecturadatos -> IN expresioncad .)
    OUT             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    FUN             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    IF              reduce using rule 145 (lecturadatos -> IN expresioncad .)
    AGRUPACION_EC1  reduce using rule 145 (lecturadatos -> IN expresioncad .)
    DURING          reduce using rule 145 (lecturadatos -> IN expresioncad .)
    DO              reduce using rule 145 (lecturadatos -> IN expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 145 (lecturadatos -> IN expresioncad .)
    INT             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    REAL            reduce using rule 145 (lecturadatos -> IN expresioncad .)
    CAD             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    NULL            reduce using rule 145 (lecturadatos -> IN expresioncad .)
    END             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    $end            reduce using rule 145 (lecturadatos -> IN expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 145 (lecturadatos -> IN expresioncad .)
    BUT             reduce using rule 145 (lecturadatos -> IN expresioncad .)
    SUMA            shift and go to state 111


state 200

    (34) llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    VARIABLE        shift and go to state 247
    NUMERO_ENTERO   shift and go to state 249
    NUMERO_REAL     shift and go to state 250
    CADENA          shift and go to state 198

    parametrosl                    shift and go to state 264
    entrada                        shift and go to state 197

state 201

    (131) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . expresionint
    (132) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . expresionvar
    (133) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . lecturadatos
    (134) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES . llamadafuncion
    (139) declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES . expresionreal
    (144) declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES . expresioncad
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (145) lecturadatos -> . IN expresioncad
    (146) lecturadatos -> . VARIABLE expresioncad
    (34) llamadafuncion -> . FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (35) llamadafuncion -> . AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (36) llamadafuncion -> . VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (161) expresioncad -> . CADENA
    (162) expresioncad -> . expresioncad SUMA CADENA
    (163) expresioncad -> . expresioncad SUMA VARIABLE

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 172
    VARIABLE        shift and go to state 165
    IN              shift and go to state 124
    FUNCTION_NAME   shift and go to state 126
    NUMERO_REAL     shift and go to state 125
    CADENA          shift and go to state 84

    expresionint                   shift and go to state 265
    expresionvar                   shift and go to state 266
    lecturadatos                   shift and go to state 267
    llamadafuncion                 shift and go to state 268
    expresionreal                  shift and go to state 269
    expresioncad                   shift and go to state 270

state 202

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME . AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1

    AGRUPACION_EC1  shift and go to state 271


state 203

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 272
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 204

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 273


state 205

    (20) finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 20 (finfuncion -> retorno AGRUPACION_BLOQUE_EC2 .)


state 206

    (30) retorno -> VARIABLE VARIABLE .

    AGRUPACION_BLOQUE_EC2 reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    BACK            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    VARIABLE        reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    NUMERO_ENTERO   reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    NUMERO_REAL     reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    CADENA          reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    OUT             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    FUN             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    IF              reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    AGRUPACION_EC1  reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    DURING          reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    DO              reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    INT             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    REAL            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    CAD             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    NULL            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    FIN             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    END             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    $end            reduce using rule 30 (retorno -> VARIABLE VARIABLE .)
    BUT             reduce using rule 30 (retorno -> VARIABLE VARIABLE .)


state 207

    (33) retorno -> VARIABLE CADENA .

    AGRUPACION_BLOQUE_EC2 reduce using rule 33 (retorno -> VARIABLE CADENA .)
    BACK            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    VARIABLE        reduce using rule 33 (retorno -> VARIABLE CADENA .)
    NUMERO_ENTERO   reduce using rule 33 (retorno -> VARIABLE CADENA .)
    NUMERO_REAL     reduce using rule 33 (retorno -> VARIABLE CADENA .)
    CADENA          reduce using rule 33 (retorno -> VARIABLE CADENA .)
    OUT             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    FUN             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    IF              reduce using rule 33 (retorno -> VARIABLE CADENA .)
    AGRUPACION_EC1  reduce using rule 33 (retorno -> VARIABLE CADENA .)
    DURING          reduce using rule 33 (retorno -> VARIABLE CADENA .)
    DO              reduce using rule 33 (retorno -> VARIABLE CADENA .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 33 (retorno -> VARIABLE CADENA .)
    INT             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    REAL            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    CAD             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    NULL            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    FIN             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    END             reduce using rule 33 (retorno -> VARIABLE CADENA .)
    $end            reduce using rule 33 (retorno -> VARIABLE CADENA .)
    BUT             reduce using rule 33 (retorno -> VARIABLE CADENA .)


state 208

    (14) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2
    (37) parametrosfun -> . tda VARIABLE
    (38) parametrosfun -> . parametrosfun SEPARADOR tda VARIABLE
    (45) tda -> . INT
    (46) tda -> . REAL
    (47) tda -> . CAD

    INT             shift and go to state 212
    REAL            shift and go to state 213
    CAD             shift and go to state 214

    parametrosfun                  shift and go to state 274
    tda                            shift and go to state 211

state 209

    (17) iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (37) parametrosfun -> . tda VARIABLE
    (38) parametrosfun -> . parametrosfun SEPARADOR tda VARIABLE
    (45) tda -> . INT
    (46) tda -> . REAL
    (47) tda -> . CAD

    INT             shift and go to state 212
    REAL            shift and go to state 213
    CAD             shift and go to state 214

    parametrosfun                  shift and go to state 275
    tda                            shift and go to state 211

state 210

    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (38) parametrosfun -> parametrosfun . SEPARADOR tda VARIABLE

    AGRUPACION_EC2  shift and go to state 276
    SEPARADOR       shift and go to state 277


state 211

    (37) parametrosfun -> tda . VARIABLE

    VARIABLE        shift and go to state 278


state 212

    (45) tda -> INT .

    VARIABLE        reduce using rule 45 (tda -> INT .)


state 213

    (46) tda -> REAL .

    VARIABLE        reduce using rule 46 (tda -> REAL .)


state 214

    (47) tda -> CAD .

    VARIABLE        reduce using rule 47 (tda -> CAD .)


state 215

    (82) parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel . tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 279
    valor                          shift and go to state 93

state 216

    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 280
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 217

    (83) parametroscontrol -> parametroscontrol operadorlog tdacontrol . operadorrel tdacontrol
    (90) operadorrel -> . IGUAL
    (91) operadorrel -> . DIFERENTE
    (92) operadorrel -> . MENOR
    (93) operadorrel -> . MAYOR
    (94) operadorrel -> . MAYOR_IGUAL
    (95) operadorrel -> . MENOR_IGUAL

    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOR           shift and go to state 152
    MAYOR           shift and go to state 153
    MAYOR_IGUAL     shift and go to state 154
    MENOR_IGUAL     shift and go to state 155

    operadorrel                    shift and go to state 281

state 218

    (84) parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 . tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 282
    valor                          shift and go to state 93

state 219

    (81) parametroscontrol -> tdacontrol operadorrel tdacontrol .

    AGRUPACION_EC2  reduce using rule 81 (parametroscontrol -> tdacontrol operadorrel tdacontrol .)
    Y_LOGICO        reduce using rule 81 (parametroscontrol -> tdacontrol operadorrel tdacontrol .)
    O_LOGICO        reduce using rule 81 (parametroscontrol -> tdacontrol operadorrel tdacontrol .)
    NEGACION        reduce using rule 81 (parametroscontrol -> tdacontrol operadorrel tdacontrol .)


state 220

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 283


state 221

    (67) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    AGRUPACION_BLOQUE_EC1 shift and go to state 284
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 285
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 222

    (62) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    AGRUPACION_BLOQUE_EC1 shift and go to state 286
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 287
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 223

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    DURING          shift and go to state 288
    AGRUPACION_EC1  shift and go to state 289
    VARIABLE        shift and go to state 290


state 224

    (61) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 291


state 225

    (60) estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 292


state 226

    (127) declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .
    (157) expresionint -> expresionint . operadorar NUMERO_ENTERO
    (158) expresionint -> expresionint . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    BACK            reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    VARIABLE        reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_ENTERO   reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_REAL     reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    CADENA          reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    OUT             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    FUN             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    IF              reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_EC1  reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    DURING          reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    DO              reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    INT             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    REAL            reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    CAD             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    NULL            reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    END             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    $end            reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    BUT             reduce using rule 127 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionint .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 180

state 227

    (128) declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    BACK            reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    VARIABLE        reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_ENTERO   reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_REAL     reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    CADENA          reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    OUT             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    FUN             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    IF              reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_EC1  reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    DURING          reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    DO              reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    INT             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    REAL            reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    CAD             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    NULL            reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    END             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    $end            reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    BUT             reduce using rule 128 (declaracionint -> INT VARIABLE ASIGNACION_VALORES expresionvar .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 293

state 228

    (129) declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .

    FIN             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    BACK            reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    VARIABLE        reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_ENTERO   reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_REAL     reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    CADENA          reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    OUT             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    FUN             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    IF              reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_EC1  reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    DURING          reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    DO              reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    INT             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    REAL            reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    CAD             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    NULL            reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    END             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    $end            reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)
    BUT             reduce using rule 129 (declaracionint -> INT VARIABLE ASIGNACION_VALORES lecturadatos .)


state 229

    (130) declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .

    FIN             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BACK            reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    VARIABLE        reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_ENTERO   reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_REAL     reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CADENA          reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    OUT             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FUN             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    IF              reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_EC1  reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DURING          reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DO              reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    INT             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    REAL            reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CAD             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NULL            reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    END             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    $end            reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BUT             reduce using rule 130 (declaracionint -> INT VARIABLE ASIGNACION_VALORES llamadafuncion .)


state 230

    (160) expresionint -> AGRUPACION_EC1 . expresionint AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (35) llamadafuncion -> AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    NUMERO_ENTERO   shift and go to state 194
    AGRUPACION_EC1  shift and go to state 294
    VARIABLE        shift and go to state 195
    NUMERO_REAL     shift and go to state 250
    CADENA          shift and go to state 198

    expresionint                   shift and go to state 190
    expresionvar                   shift and go to state 295
    parametrosl                    shift and go to state 193
    entrada                        shift and go to state 197

state 231

    (135) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .
    (152) expresionreal -> expresionreal . operadorar NUMERO_REAL
    (153) expresionreal -> expresionreal . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    BACK            reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    VARIABLE        reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_ENTERO   reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_REAL     reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    CADENA          reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    OUT             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    FUN             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    IF              reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_EC1  reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    DURING          reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    DO              reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    INT             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    REAL            reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    CAD             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    NULL            reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    END             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    $end            reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    BUT             reduce using rule 135 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionreal .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 187

state 232

    (136) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    BACK            reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    VARIABLE        reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_ENTERO   reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_REAL     reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    CADENA          reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    OUT             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    FUN             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    IF              reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_EC1  reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    DURING          reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    DO              reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    INT             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    REAL            reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    CAD             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    NULL            reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    END             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    $end            reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    BUT             reduce using rule 136 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES expresionvar .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 296

state 233

    (137) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .

    FIN             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    BACK            reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    VARIABLE        reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_ENTERO   reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_REAL     reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    CADENA          reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    OUT             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    FUN             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    IF              reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_EC1  reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    DURING          reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    DO              reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    INT             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    REAL            reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    CAD             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    NULL            reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    END             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    $end            reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)
    BUT             reduce using rule 137 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES lecturadatos .)


state 234

    (138) declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .

    FIN             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BACK            reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    VARIABLE        reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_ENTERO   reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_REAL     reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CADENA          reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    OUT             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FUN             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    IF              reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_EC1  reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DURING          reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DO              reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    INT             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    REAL            reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CAD             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NULL            reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    END             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    $end            reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BUT             reduce using rule 138 (declaracionreal -> REAL VARIABLE ASIGNACION_VALORES llamadafuncion .)


state 235

    (155) expresionreal -> AGRUPACION_EC1 . expresionreal AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (35) llamadafuncion -> AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    NUMERO_REAL     shift and go to state 196
    AGRUPACION_EC1  shift and go to state 297
    VARIABLE        shift and go to state 195
    NUMERO_ENTERO   shift and go to state 249
    CADENA          shift and go to state 198

    expresionreal                  shift and go to state 191
    expresionvar                   shift and go to state 298
    parametrosl                    shift and go to state 193
    entrada                        shift and go to state 197

state 236

    (140) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    BACK            reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    VARIABLE        reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_ENTERO   reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_REAL     reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    CADENA          reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    OUT             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    FUN             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    IF              reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_EC1  reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    DURING          reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    DO              reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    INT             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    REAL            reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    CAD             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    NULL            reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    END             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    $end            reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    BUT             reduce using rule 140 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresioncad .)
    SUMA            shift and go to state 111


state 237

    (141) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    BACK            reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    VARIABLE        reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_ENTERO   reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_REAL     reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    CADENA          reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    OUT             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    FUN             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    IF              reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_EC1  reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    DURING          reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    DO              reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    INT             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    REAL            reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    CAD             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    NULL            reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    END             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    $end            reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    BUT             reduce using rule 141 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES expresionvar .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 299

state 238

    (142) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .

    FIN             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    BACK            reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    VARIABLE        reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_ENTERO   reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_REAL     reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    CADENA          reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    OUT             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    FUN             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    IF              reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_EC1  reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    DURING          reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    DO              reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    INT             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    REAL            reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    CAD             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    NULL            reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    END             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    $end            reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)
    BUT             reduce using rule 142 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES lecturadatos .)


state 239

    (143) declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .

    FIN             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BACK            reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    VARIABLE        reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_ENTERO   reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_REAL     reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CADENA          reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    OUT             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FUN             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    IF              reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_EC1  reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DURING          reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DO              reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    INT             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    REAL            reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CAD             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NULL            reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    END             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    $end            reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BUT             reduce using rule 143 (declaracioncad -> CAD VARIABLE ASIGNACION_VALORES llamadafuncion .)


state 240

    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (35) llamadafuncion -> AGRUPACION_EC1 . parametrosl AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (43) parametrosl -> . entrada
    (44) parametrosl -> . parametrosl SEPARADOR entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    VARIABLE        shift and go to state 195
    AGRUPACION_EC1  shift and go to state 300
    NUMERO_ENTERO   shift and go to state 249
    NUMERO_REAL     shift and go to state 250
    CADENA          shift and go to state 198

    expresionvar                   shift and go to state 301
    parametrosl                    shift and go to state 193
    entrada                        shift and go to state 197

state 241

    (159) expresionint -> expresionvar operadorar . NUMERO_ENTERO
    (165) expresionvar -> expresionvar operadorar . VARIABLE
    (154) expresionreal -> expresionvar operadorar . NUMERO_REAL

    NUMERO_ENTERO   shift and go to state 255
    VARIABLE        shift and go to state 257
    NUMERO_REAL     shift and go to state 256


state 242

    (160) expresionint -> AGRUPACION_EC1 . expresionint AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (155) expresionreal -> AGRUPACION_EC1 . expresionreal AGRUPACION_EC2
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 242
    VARIABLE        shift and go to state 258
    NUMERO_REAL     shift and go to state 125

    expresionint                   shift and go to state 190
    expresionvar                   shift and go to state 243
    expresionreal                  shift and go to state 191

state 243

    (166) expresionvar -> AGRUPACION_EC1 expresionvar . AGRUPACION_EC2
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 261
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 241

state 244

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (38) parametrosfun -> parametrosfun . SEPARADOR tda VARIABLE

    AGRUPACION_EC2  shift and go to state 302
    SEPARADOR       shift and go to state 277


state 245

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 303
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 246

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 304


state 247

    (39) entrada -> VARIABLE .

    AGRUPACION_EC2  reduce using rule 39 (entrada -> VARIABLE .)
    SEPARADOR       reduce using rule 39 (entrada -> VARIABLE .)


state 248

    (36) llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl . AGRUPACION_EC2
    (44) parametrosl -> parametrosl . SEPARADOR entrada

    AGRUPACION_EC2  shift and go to state 305
    SEPARADOR       shift and go to state 263


state 249

    (40) entrada -> NUMERO_ENTERO .

    AGRUPACION_EC2  reduce using rule 40 (entrada -> NUMERO_ENTERO .)
    SEPARADOR       reduce using rule 40 (entrada -> NUMERO_ENTERO .)


state 250

    (41) entrada -> NUMERO_REAL .

    AGRUPACION_EC2  reduce using rule 41 (entrada -> NUMERO_REAL .)
    SEPARADOR       reduce using rule 41 (entrada -> NUMERO_REAL .)


state 251

    (157) expresionint -> expresionint operadorar NUMERO_ENTERO .

    SUMA            reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    RESTA           reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    MULTIPLICACION1 reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    MULTIPLICACION2 reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    DIVISION        reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    MODULO          reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    FIN             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    BACK            reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    VARIABLE        reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    CADENA          reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    OUT             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    FUN             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    IF              reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    DURING          reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    DO              reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    INT             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    REAL            reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    CAD             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    NULL            reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    END             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    $end            reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    BUT             reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)
    AGRUPACION_EC2  reduce using rule 157 (expresionint -> expresionint operadorar NUMERO_ENTERO .)


state 252

    (158) expresionint -> expresionint operadorar VARIABLE .

    SUMA            reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    RESTA           reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    MULTIPLICACION1 reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    MULTIPLICACION2 reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    DIVISION        reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    MODULO          reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    FIN             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    BACK            reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    VARIABLE        reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    NUMERO_ENTERO   reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    NUMERO_REAL     reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    CADENA          reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    OUT             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    FUN             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    IF              reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    AGRUPACION_EC1  reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    DURING          reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    DO              reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    INT             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    REAL            reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    CAD             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    NULL            reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    END             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    $end            reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    BUT             reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)
    AGRUPACION_EC2  reduce using rule 158 (expresionint -> expresionint operadorar VARIABLE .)


state 253

    (152) expresionreal -> expresionreal operadorar NUMERO_REAL .

    SUMA            reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    RESTA           reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    MULTIPLICACION1 reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    MULTIPLICACION2 reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    DIVISION        reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    MODULO          reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    FIN             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    BACK            reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    VARIABLE        reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    CADENA          reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    OUT             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    FUN             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    IF              reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    DURING          reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    DO              reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    INT             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    REAL            reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    CAD             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    NULL            reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    END             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    $end            reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    BUT             reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)
    AGRUPACION_EC2  reduce using rule 152 (expresionreal -> expresionreal operadorar NUMERO_REAL .)


state 254

    (153) expresionreal -> expresionreal operadorar VARIABLE .

    SUMA            reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    RESTA           reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    MULTIPLICACION1 reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    MULTIPLICACION2 reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    DIVISION        reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    MODULO          reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    FIN             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    BACK            reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    VARIABLE        reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    NUMERO_ENTERO   reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    NUMERO_REAL     reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    CADENA          reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    OUT             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    FUN             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    IF              reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    AGRUPACION_EC1  reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    DURING          reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    DO              reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    INT             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    REAL            reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    CAD             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    NULL            reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    END             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    $end            reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    BUT             reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)
    AGRUPACION_EC2  reduce using rule 153 (expresionreal -> expresionreal operadorar VARIABLE .)


state 255

    (159) expresionint -> expresionvar operadorar NUMERO_ENTERO .

    SUMA            reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    RESTA           reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    MULTIPLICACION1 reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    MULTIPLICACION2 reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    DIVISION        reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    MODULO          reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    FIN             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    BACK            reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    VARIABLE        reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    NUMERO_ENTERO   reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    NUMERO_REAL     reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    CADENA          reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    OUT             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    FUN             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    IF              reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    AGRUPACION_EC1  reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    DURING          reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    DO              reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    INT             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    REAL            reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    CAD             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    NULL            reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    END             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    $end            reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    BUT             reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)
    AGRUPACION_EC2  reduce using rule 159 (expresionint -> expresionvar operadorar NUMERO_ENTERO .)


state 256

    (154) expresionreal -> expresionvar operadorar NUMERO_REAL .

    SUMA            reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    RESTA           reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    MULTIPLICACION1 reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    MULTIPLICACION2 reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    DIVISION        reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    MODULO          reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    FIN             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    BACK            reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    VARIABLE        reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    NUMERO_ENTERO   reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    NUMERO_REAL     reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    CADENA          reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    OUT             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    FUN             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    IF              reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    AGRUPACION_EC1  reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    DURING          reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    DO              reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    INT             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    REAL            reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    CAD             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    NULL            reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    END             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    $end            reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    BUT             reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)
    AGRUPACION_EC2  reduce using rule 154 (expresionreal -> expresionvar operadorar NUMERO_REAL .)


state 257

    (165) expresionvar -> expresionvar operadorar VARIABLE .

    SUMA            reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    RESTA           reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    MULTIPLICACION1 reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    MULTIPLICACION2 reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    DIVISION        reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    MODULO          reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    FIN             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    BACK            reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    VARIABLE        reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    NUMERO_ENTERO   reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    NUMERO_REAL     reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    CADENA          reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    OUT             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    FUN             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    IF              reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    AGRUPACION_EC1  reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    DURING          reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    DO              reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    INT             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    REAL            reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    CAD             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    NULL            reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    END             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    $end            reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    BUT             reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)
    AGRUPACION_EC2  reduce using rule 165 (expresionvar -> expresionvar operadorar VARIABLE .)


state 258

    (164) expresionvar -> VARIABLE .

    AGRUPACION_EC2  reduce using rule 164 (expresionvar -> VARIABLE .)
    SUMA            reduce using rule 164 (expresionvar -> VARIABLE .)
    RESTA           reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION1 reduce using rule 164 (expresionvar -> VARIABLE .)
    MULTIPLICACION2 reduce using rule 164 (expresionvar -> VARIABLE .)
    DIVISION        reduce using rule 164 (expresionvar -> VARIABLE .)
    MODULO          reduce using rule 164 (expresionvar -> VARIABLE .)


state 259

    (160) expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .

    SUMA            reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    RESTA           reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    MULTIPLICACION1 reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    MULTIPLICACION2 reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    DIVISION        reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    MODULO          reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    FIN             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    BACK            reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    CADENA          reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    OUT             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    FUN             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    IF              reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    DURING          reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    DO              reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    INT             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    REAL            reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    CAD             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    NULL            reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    END             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    $end            reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    BUT             reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)
    AGRUPACION_EC2  reduce using rule 160 (expresionint -> AGRUPACION_EC1 expresionint AGRUPACION_EC2 .)


state 260

    (155) expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .

    SUMA            reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    RESTA           reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    MULTIPLICACION1 reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    MULTIPLICACION2 reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    DIVISION        reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    MODULO          reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    FIN             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    BACK            reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    CADENA          reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    OUT             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    FUN             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    IF              reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    DURING          reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    DO              reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    INT             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    REAL            reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    CAD             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    NULL            reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    END             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    $end            reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    BUT             reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)
    AGRUPACION_EC2  reduce using rule 155 (expresionreal -> AGRUPACION_EC1 expresionreal AGRUPACION_EC2 .)


state 261

    (166) expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .

    SUMA            reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    RESTA           reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    MULTIPLICACION1 reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    MULTIPLICACION2 reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    DIVISION        reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    MODULO          reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    FIN             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    BACK            reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    CADENA          reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    OUT             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    FUN             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    IF              reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    DURING          reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    DO              reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    INT             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    REAL            reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    CAD             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    NULL            reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    END             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    $end            reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    BUT             reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)
    AGRUPACION_EC2  reduce using rule 166 (expresionvar -> AGRUPACION_EC1 expresionvar AGRUPACION_EC2 .)


state 262

    (35) llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .

    FIN             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    BACK            reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    CADENA          reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    OUT             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    FUN             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    IF              reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    DURING          reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    DO              reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    INT             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    REAL            reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    CAD             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NULL            reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    END             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    $end            reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    BUT             reduce using rule 35 (llamadafuncion -> AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)


state 263

    (44) parametrosl -> parametrosl SEPARADOR . entrada
    (39) entrada -> . VARIABLE
    (40) entrada -> . NUMERO_ENTERO
    (41) entrada -> . NUMERO_REAL
    (42) entrada -> . CADENA

    VARIABLE        shift and go to state 247
    NUMERO_ENTERO   shift and go to state 249
    NUMERO_REAL     shift and go to state 250
    CADENA          shift and go to state 198

    entrada                        shift and go to state 306

state 264

    (34) llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl . AGRUPACION_EC2
    (44) parametrosl -> parametrosl . SEPARADOR entrada

    AGRUPACION_EC2  shift and go to state 307
    SEPARADOR       shift and go to state 263


state 265

    (131) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .
    (157) expresionint -> expresionint . operadorar NUMERO_ENTERO
    (158) expresionint -> expresionint . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    BACK            reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    VARIABLE        reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_ENTERO   reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    NUMERO_REAL     reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    CADENA          reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    OUT             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    FUN             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    IF              reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_EC1  reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    DURING          reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    DO              reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    INT             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    REAL            reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    CAD             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    NULL            reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    END             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    $end            reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    BUT             reduce using rule 131 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 180

state 266

    (132) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    BACK            reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    VARIABLE        reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_ENTERO   reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    NUMERO_REAL     reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    CADENA          reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    OUT             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    FUN             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    IF              reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_EC1  reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    DURING          reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    DO              reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    INT             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    REAL            reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    CAD             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    NULL            reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    END             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    $end            reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    BUT             reduce using rule 132 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 241

state 267

    (133) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .

    FIN             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    BACK            reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    VARIABLE        reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_ENTERO   reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    NUMERO_REAL     reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    CADENA          reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    OUT             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    FUN             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    IF              reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_EC1  reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    DURING          reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    DO              reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    INT             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    REAL            reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    CAD             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    NULL            reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    END             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    $end            reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)
    BUT             reduce using rule 133 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos .)


state 268

    (134) declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .

    FIN             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BACK            reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    VARIABLE        reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_ENTERO   reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NUMERO_REAL     reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CADENA          reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    OUT             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    FUN             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    IF              reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_EC1  reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DURING          reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    DO              reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    INT             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    REAL            reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    CAD             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    NULL            reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    END             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    $end            reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)
    BUT             reduce using rule 134 (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion .)


state 269

    (139) declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .
    (152) expresionreal -> expresionreal . operadorar NUMERO_REAL
    (153) expresionreal -> expresionreal . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    FIN             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    BACK            reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    VARIABLE        reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_ENTERO   reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    NUMERO_REAL     reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    CADENA          reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    OUT             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    FUN             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    IF              reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_EC1  reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    DURING          reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    DO              reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    INT             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    REAL            reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    CAD             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    NULL            reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    END             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    $end            reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    BUT             reduce using rule 139 (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 187

state 270

    (144) declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .
    (162) expresioncad -> expresioncad . SUMA CADENA
    (163) expresioncad -> expresioncad . SUMA VARIABLE

    FIN             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    BACK            reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    VARIABLE        reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_ENTERO   reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    NUMERO_REAL     reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    CADENA          reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    OUT             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    FUN             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    IF              reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_EC1  reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    DURING          reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    DO              reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    INT             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    REAL            reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    CAD             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    NULL            reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    END             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    $end            reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    BUT             reduce using rule 144 (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad .)
    SUMA            shift and go to state 111


state 271

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 . parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (37) parametrosfun -> . tda VARIABLE
    (38) parametrosfun -> . parametrosfun SEPARADOR tda VARIABLE
    (45) tda -> . INT
    (46) tda -> . REAL
    (47) tda -> . CAD

    INT             shift and go to state 212
    REAL            shift and go to state 213
    CAD             shift and go to state 214

    parametrosfun                  shift and go to state 308
    tda                            shift and go to state 211

state 272

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 309


state 273

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    DURING          shift and go to state 310


state 274

    (14) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2
    (38) parametrosfun -> parametrosfun . SEPARADOR tda VARIABLE

    AGRUPACION_EC2  shift and go to state 311
    SEPARADOR       shift and go to state 277


state 275

    (17) iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (38) parametrosfun -> parametrosfun . SEPARADOR tda VARIABLE

    AGRUPACION_EC2  shift and go to state 312
    SEPARADOR       shift and go to state 277


state 276

    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1

    AGRUPACION_BLOQUE_EC1 shift and go to state 313


state 277

    (38) parametrosfun -> parametrosfun SEPARADOR . tda VARIABLE
    (45) tda -> . INT
    (46) tda -> . REAL
    (47) tda -> . CAD

    INT             shift and go to state 212
    REAL            shift and go to state 213
    CAD             shift and go to state 214

    tda                            shift and go to state 314

state 278

    (37) parametrosfun -> tda VARIABLE .

    AGRUPACION_EC2  reduce using rule 37 (parametrosfun -> tda VARIABLE .)
    SEPARADOR       reduce using rule 37 (parametrosfun -> tda VARIABLE .)


state 279

    (82) parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol . AGRUPACION_EC2

    AGRUPACION_EC2  shift and go to state 315


state 280

    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 316


state 281

    (83) parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel . tdacontrol
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 317
    valor                          shift and go to state 93

state 282

    (84) parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol . operadorrel tdacontrol AGRUPACION_EC2
    (90) operadorrel -> . IGUAL
    (91) operadorrel -> . DIFERENTE
    (92) operadorrel -> . MENOR
    (93) operadorrel -> . MAYOR
    (94) operadorrel -> . MAYOR_IGUAL
    (95) operadorrel -> . MENOR_IGUAL

    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOR           shift and go to state 152
    MAYOR           shift and go to state 153
    MAYOR_IGUAL     shift and go to state 154
    MENOR_IGUAL     shift and go to state 155

    operadorrel                    shift and go to state 318

state 283

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 319
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 284

    (67) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque
    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    bloque                         shift and go to state 320
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 285

    (75) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque . AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 321


state 286

    (62) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    bloque                         shift and go to state 322
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 287

    (65) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 323


state 288

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 324


state 289

    (58) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 325
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 290

    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 326


state 291

    (61) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 327
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 292

    (60) estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 328
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 293

    (159) expresionint -> expresionvar operadorar . NUMERO_ENTERO
    (165) expresionvar -> expresionvar operadorar . VARIABLE

    NUMERO_ENTERO   shift and go to state 255
    VARIABLE        shift and go to state 257


state 294

    (160) expresionint -> AGRUPACION_EC1 . expresionint AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (156) expresionint -> . NUMERO_ENTERO
    (157) expresionint -> . expresionint operadorar NUMERO_ENTERO
    (158) expresionint -> . expresionint operadorar VARIABLE
    (159) expresionint -> . expresionvar operadorar NUMERO_ENTERO
    (160) expresionint -> . AGRUPACION_EC1 expresionint AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2

    NUMERO_ENTERO   shift and go to state 122
    AGRUPACION_EC1  shift and go to state 294
    VARIABLE        shift and go to state 258

    expresionint                   shift and go to state 190
    expresionvar                   shift and go to state 295

state 295

    (166) expresionvar -> AGRUPACION_EC1 expresionvar . AGRUPACION_EC2
    (159) expresionint -> expresionvar . operadorar NUMERO_ENTERO
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 261
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 293

state 296

    (154) expresionreal -> expresionvar operadorar . NUMERO_REAL
    (165) expresionvar -> expresionvar operadorar . VARIABLE

    NUMERO_REAL     shift and go to state 256
    VARIABLE        shift and go to state 257


state 297

    (155) expresionreal -> AGRUPACION_EC1 . expresionreal AGRUPACION_EC2
    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (151) expresionreal -> . NUMERO_REAL
    (152) expresionreal -> . expresionreal operadorar NUMERO_REAL
    (153) expresionreal -> . expresionreal operadorar VARIABLE
    (154) expresionreal -> . expresionvar operadorar NUMERO_REAL
    (155) expresionreal -> . AGRUPACION_EC1 expresionreal AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2

    NUMERO_REAL     shift and go to state 125
    AGRUPACION_EC1  shift and go to state 297
    VARIABLE        shift and go to state 258

    expresionreal                  shift and go to state 191
    expresionvar                   shift and go to state 298

state 298

    (166) expresionvar -> AGRUPACION_EC1 expresionvar . AGRUPACION_EC2
    (154) expresionreal -> expresionvar . operadorar NUMERO_REAL
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 261
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 296

state 299

    (165) expresionvar -> expresionvar operadorar . VARIABLE

    VARIABLE        shift and go to state 257


state 300

    (166) expresionvar -> AGRUPACION_EC1 . expresionvar AGRUPACION_EC2
    (164) expresionvar -> . VARIABLE
    (165) expresionvar -> . expresionvar operadorar VARIABLE
    (166) expresionvar -> . AGRUPACION_EC1 expresionvar AGRUPACION_EC2

    VARIABLE        shift and go to state 258
    AGRUPACION_EC1  shift and go to state 300

    expresionvar                   shift and go to state 301

state 301

    (166) expresionvar -> AGRUPACION_EC1 expresionvar . AGRUPACION_EC2
    (165) expresionvar -> expresionvar . operadorar VARIABLE
    (167) operadorar -> . SUMA
    (168) operadorar -> . RESTA
    (169) operadorar -> . MULTIPLICACION1
    (170) operadorar -> . MULTIPLICACION2
    (171) operadorar -> . DIVISION
    (172) operadorar -> . MODULO

    AGRUPACION_EC2  shift and go to state 261
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION1 shift and go to state 183
    MULTIPLICACION2 shift and go to state 184
    DIVISION        shift and go to state 185
    MODULO          shift and go to state 186

    operadorar                     shift and go to state 299

state 302

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1

    AGRUPACION_BLOQUE_EC1 shift and go to state 329


state 303

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 330


state 304

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 331
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 305

    (36) llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .

    FIN             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    BACK            reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    CADENA          reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    OUT             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    FUN             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    IF              reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    DURING          reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    DO              reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    INT             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    REAL            reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    CAD             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NULL            reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    END             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    $end            reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    BUT             reduce using rule 36 (llamadafuncion -> VARIABLE AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)


state 306

    (44) parametrosl -> parametrosl SEPARADOR entrada .

    AGRUPACION_EC2  reduce using rule 44 (parametrosl -> parametrosl SEPARADOR entrada .)
    SEPARADOR       reduce using rule 44 (parametrosl -> parametrosl SEPARADOR entrada .)


state 307

    (34) llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .

    FIN             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    BACK            reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    CADENA          reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    OUT             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    FUN             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    IF              reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    DURING          reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    DO              reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    INT             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    REAL            reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    CAD             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    NULL            reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    END             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    $end            reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)
    BUT             reduce using rule 34 (llamadafuncion -> FUNCTION_NAME AGRUPACION_EC1 parametrosl AGRUPACION_EC2 .)


state 308

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun . AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (38) parametrosfun -> parametrosfun . SEPARADOR tda VARIABLE

    AGRUPACION_EC2  shift and go to state 332
    SEPARADOR       shift and go to state 277


state 309

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 333
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 310

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

    AGRUPACION_EC1  shift and go to state 334


state 311

    (14) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .

  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
    AGRUPACION_BLOQUE_EC1 shift and go to state 335
    BACK            reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    CADENA          reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    OUT             reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    FUN             reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    IF              reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    DURING          reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    DO              reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    INT             reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    REAL            reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    CAD             reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    NULL            reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)
    FIN             reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .)

  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 18 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 .) ]


state 312

    (17) iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1

    AGRUPACION_BLOQUE_EC1 shift and go to state 336


state 313

    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .

    BACK            reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    VARIABLE        reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_ENTERO   reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_REAL     reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CADENA          reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    OUT             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FUN             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    IF              reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_EC1  reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DURING          reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DO              reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    INT             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    REAL            reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CAD             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NULL            reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FIN             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)


state 314

    (38) parametrosfun -> parametrosfun SEPARADOR tda . VARIABLE

    VARIABLE        shift and go to state 337


state 315

    (82) parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .

    AGRUPACION_EC2  reduce using rule 82 (parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)
    Y_LOGICO        reduce using rule 82 (parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)
    O_LOGICO        reduce using rule 82 (parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)
    NEGACION        reduce using rule 82 (parametroscontrol -> AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)


state 316

    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

  ! shift/reduce conflict for BUT resolved as shift
  ! reduce/reduce conflict for BACK resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for $end resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! shift/reduce conflict for BUT resolved as shift
    BUT             shift and go to state 338
    BACK            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)

  ! BACK            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! VARIABLE        [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CADENA          [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! OUT             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FUN             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! IF              [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DO              [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! INT             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! REAL            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CAD             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NULL            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FIN             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! END             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! $end            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BUT             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BUT             [ reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 317

    (83) parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel tdacontrol .

    AGRUPACION_EC2  reduce using rule 83 (parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel tdacontrol .)
    Y_LOGICO        reduce using rule 83 (parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel tdacontrol .)
    O_LOGICO        reduce using rule 83 (parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel tdacontrol .)
    NEGACION        reduce using rule 83 (parametroscontrol -> parametroscontrol operadorlog tdacontrol operadorrel tdacontrol .)


state 318

    (84) parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel . tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    tdacontrol                     shift and go to state 339
    valor                          shift and go to state 93

state 319

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 340
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 320

    (67) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .
    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved as shift
  ! shift/reduce conflict for BUT resolved as shift
    AGRUPACION_BLOQUE_EC2 shift and go to state 341
    BACK            reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    VARIABLE        reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    NUMERO_ENTERO   reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    NUMERO_REAL     reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    CADENA          reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    OUT             reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    FUN             reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    IF              reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    AGRUPACION_EC1  reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    DURING          reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    DO              reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    INT             reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    REAL            reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    CAD             reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    NULL            reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    FIN             reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    END             reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    $end            reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    BUT             shift and go to state 342

  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .) ]
  ! BUT             [ reduce using rule 78 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .) ]


state 321

    (75) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .
    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

  ! shift/reduce conflict for BUT resolved as shift
    BACK            reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             shift and go to state 343

  ! BUT             [ reduce using rule 75 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 322

    (62) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved as shift
    AGRUPACION_BLOQUE_EC2 shift and go to state 344
    BACK            reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    VARIABLE        reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    NUMERO_ENTERO   reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    NUMERO_REAL     reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    CADENA          reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    OUT             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    FUN             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    IF              reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    AGRUPACION_EC1  reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    DURING          reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    DO              reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    INT             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    REAL            reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    CAD             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    NULL            reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    FIN             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    END             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    $end            reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)
    BUT             reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .)

  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 66 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque .) ]


state 323

    (65) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 65 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 .)


state 324

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 345
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 325

    (58) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 346
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 326

    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 347
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 327

    (61) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 348
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 328

    (60) estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 349
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 329

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .
    (15) iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .

  ! reduce/reduce conflict for BACK resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for CADENA resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for OUT resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for FUN resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for DURING resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for DO resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for INT resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for REAL resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for CAD resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for NULL resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
  ! reduce/reduce conflict for FIN resolved using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    BACK            reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    VARIABLE        reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_ENTERO   reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_REAL     reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CADENA          reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    OUT             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FUN             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    IF              reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_EC1  reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DURING          reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DO              reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    INT             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    REAL            reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CAD             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NULL            reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FIN             reduce using rule 15 (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)

  ! BACK            [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! VARIABLE        [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! NUMERO_REAL     [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! CADENA          [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! OUT             [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! FUN             [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! IF              [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! DURING          [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! DO              [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! INT             [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! REAL            [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! CAD             [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! NULL            [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]
  ! FIN             [ reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .) ]


state 330

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (69) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

  ! reduce/reduce conflict for BACK resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for BACK resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for BACK resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             shift and go to state 350
    BACK            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 63 (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)

  ! BACK            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! VARIABLE        [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CADENA          [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! OUT             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FUN             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! IF              [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DO              [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! INT             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! REAL            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CAD             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NULL            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FIN             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! END             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BACK            [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! VARIABLE        [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CADENA          [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! OUT             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FUN             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! IF              [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DO              [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! INT             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! REAL            [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CAD             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NULL            [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FIN             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! END             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BACK            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! VARIABLE        [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CADENA          [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! OUT             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FUN             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! IF              [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DO              [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! INT             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! REAL            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CAD             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NULL            [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FIN             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! END             [ reduce using rule 69 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 331

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 351
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 332

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 . AGRUPACION_BLOQUE_EC1

    AGRUPACION_BLOQUE_EC1 shift and go to state 352


state 333

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 353


state 334

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 . parametroscontrol AGRUPACION_EC2
    (81) parametroscontrol -> . tdacontrol operadorrel tdacontrol
    (82) parametroscontrol -> . AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (83) parametroscontrol -> . parametroscontrol operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> . parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (85) tdacontrol -> . valor
    (86) tdacontrol -> . VARIABLE
    (173) valor -> . NUMERO_ENTERO
    (174) valor -> . NUMERO_REAL

    AGRUPACION_EC1  shift and go to state 90
    VARIABLE        shift and go to state 94
    NUMERO_ENTERO   shift and go to state 95
    NUMERO_REAL     shift and go to state 96

    parametroscontrol              shift and go to state 354
    tdacontrol                     shift and go to state 92
    valor                          shift and go to state 93

state 335

    (14) iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .

    BACK            reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    VARIABLE        reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_ENTERO   reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_REAL     reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CADENA          reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    OUT             reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FUN             reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    IF              reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_EC1  reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DURING          reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DO              reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    INT             reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    REAL            reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CAD             reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NULL            reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FIN             reduce using rule 14 (iniciofuncion -> FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)


state 336

    (17) iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .

    BACK            reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    VARIABLE        reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_ENTERO   reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_REAL     reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CADENA          reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    OUT             reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FUN             reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    IF              reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_EC1  reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DURING          reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DO              reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    INT             reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    REAL            reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CAD             reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NULL            reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FIN             reduce using rule 17 (iniciofuncion -> FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)


state 337

    (38) parametrosfun -> parametrosfun SEPARADOR tda VARIABLE .

    AGRUPACION_EC2  reduce using rule 38 (parametrosfun -> parametrosfun SEPARADOR tda VARIABLE .)
    SEPARADOR       reduce using rule 38 (parametrosfun -> parametrosfun SEPARADOR tda VARIABLE .)


state 338

    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 355


state 339

    (84) parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol . AGRUPACION_EC2

    AGRUPACION_EC2  shift and go to state 356


state 340

    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

    BACK            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)


state 341

    (67) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

  ! shift/reduce conflict for BUT resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
    BACK            reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             shift and go to state 358
    AGRUPACION_BLOQUE_EC1 shift and go to state 357
    VARIABLE        shift and go to state 359
    DURING          shift and go to state 220

  ! VARIABLE        [ reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BUT             [ reduce using rule 67 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 342

    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 360


state 343

    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 361


state 344

    (62) estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

  ! shift/reduce conflict for DURING resolved as shift
    BACK            reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          shift and go to state 220

  ! DURING          [ reduce using rule 62 (estructuraiteracion1 -> DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 345

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 362
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 346

    (58) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

    BACK            reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 58 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)


state 347

    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 363
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 348

    (61) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

    BACK            reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 61 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)


state 349

    (60) estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

    BACK            reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 60 (estructuraiteracion2 -> DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)


state 350

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 364


state 351

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

  ! reduce/reduce conflict for BACK resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BACK            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)

  ! BACK            [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! VARIABLE        [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! CADENA          [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! OUT             [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! FUN             [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! IF              [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! DURING          [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! DO              [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! INT             [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! REAL            [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! CAD             [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! NULL            [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! FIN             [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! END             [ reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]


state 352

    (16) iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .

    BACK            reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    VARIABLE        reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_ENTERO   reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NUMERO_REAL     reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CADENA          reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    OUT             reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FUN             reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    IF              reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_EC1  reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DURING          reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    DO              reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    INT             reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    REAL            reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    CAD             reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    NULL            reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)
    FIN             reduce using rule 16 (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 .)


state 353

    (71) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

  ! shift/reduce conflict for BUT resolved as shift
  ! reduce/reduce conflict for BACK resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for $end resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! shift/reduce conflict for BUT resolved as shift
    BUT             shift and go to state 365
    BACK            reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)

  ! BACK            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! VARIABLE        [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CADENA          [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! OUT             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FUN             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! IF              [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DO              [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! INT             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! REAL            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CAD             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NULL            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FIN             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! END             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! $end            [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BUT             [ reduce using rule 71 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! BUT             [ reduce using rule 64 (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 354

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol . AGRUPACION_EC2
    (83) parametroscontrol -> parametroscontrol . operadorlog tdacontrol operadorrel tdacontrol
    (84) parametroscontrol -> parametroscontrol . operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2
    (87) operadorlog -> . Y_LOGICO
    (88) operadorlog -> . O_LOGICO
    (89) operadorlog -> . NEGACION

    AGRUPACION_EC2  shift and go to state 366
    Y_LOGICO        shift and go to state 146
    O_LOGICO        shift and go to state 147
    NEGACION        shift and go to state 148

    operadorlog                    shift and go to state 145

state 355

    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 367
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 356

    (84) parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .

    AGRUPACION_EC2  reduce using rule 84 (parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)
    Y_LOGICO        reduce using rule 84 (parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)
    O_LOGICO        reduce using rule 84 (parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)
    NEGACION        reduce using rule 84 (parametroscontrol -> parametroscontrol operadorlog AGRUPACION_EC1 tdacontrol operadorrel tdacontrol AGRUPACION_EC2 .)


state 357

    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 368
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 358

    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    AGRUPACION_BLOQUE_EC1 shift and go to state 369
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 370
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 359

    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 371


state 360

    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 372
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 361

    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 373
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 362

    (55) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

  ! reduce/reduce conflict for BACK resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BACK            reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 55 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)

  ! BACK            [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! VARIABLE        [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! CADENA          [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! OUT             [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! FUN             [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! IF              [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! DURING          [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! DO              [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! INT             [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! REAL            [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! CAD             [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! NULL            [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! FIN             [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 56 (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .) ]


state 363

    (59) estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

    BACK            reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 59 (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)


state 364

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 374
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 365

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC1 shift and go to state 375


state 366

    (57) estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .

    BACK            reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    VARIABLE        reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_ENTERO   reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NUMERO_REAL     reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CADENA          reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    OUT             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FUN             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    IF              reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_EC1  reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DURING          reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    DO              reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    INT             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    REAL            reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    CAD             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    NULL            reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    FIN             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    END             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    $end            reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)
    BUT             reduce using rule 57 (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 .)


state 367

    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 376


state 368

    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 377


state 369

    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for NUMERO_ENTERO resolved as shift
  ! shift/reduce conflict for NUMERO_REAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for OUT resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for AGRUPACION_EC1 resolved as shift
  ! shift/reduce conflict for DURING resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for CAD resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    END             reduce using rule 102 (empty -> .)
    $end            reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    BUT             reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

  ! VARIABLE        [ reduce using rule 102 (empty -> .) ]
  ! BACK            [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_ENTERO   [ reduce using rule 102 (empty -> .) ]
  ! NUMERO_REAL     [ reduce using rule 102 (empty -> .) ]
  ! CADENA          [ reduce using rule 102 (empty -> .) ]
  ! DURING          [ reduce using rule 102 (empty -> .) ]
  ! OUT             [ reduce using rule 102 (empty -> .) ]
  ! FUN             [ reduce using rule 102 (empty -> .) ]
  ! IF              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_EC1  [ reduce using rule 102 (empty -> .) ]
  ! DO              [ reduce using rule 102 (empty -> .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 102 (empty -> .) ]
  ! INT             [ reduce using rule 102 (empty -> .) ]
  ! REAL            [ reduce using rule 102 (empty -> .) ]
  ! CAD             [ reduce using rule 102 (empty -> .) ]
  ! NULL            [ reduce using rule 102 (empty -> .) ]

    bloque                         shift and go to state 378
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 370

    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 379


state 371

    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 380
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 372

    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 381


state 373

    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 382


state 374

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 383


state 375

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 . bloque AGRUPACION_BLOQUE_EC2
    (96) bloque -> . final bloque
    (97) bloque -> . funcion bloque
    (98) bloque -> . estructuracontrol bloque
    (99) bloque -> . finvac bloque
    (100) bloque -> . retorno bloque
    (101) bloque -> . empty
    (104) final -> . asignacion FIN
    (105) final -> . salidadatos FIN
    (106) final -> . declaracion FIN
    (107) final -> . asignacion
    (108) final -> . salidadatos
    (109) final -> . declaracion
    (19) funcion -> . iniciofuncion bloque finfuncion
    (52) estructuracontrol -> . estructuradesicion
    (53) estructuracontrol -> . estructuraiteracion1
    (54) estructuracontrol -> . estructuraiteracion2
    (103) finvac -> . empty FIN
    (22) retorno -> . BACK VARIABLE
    (23) retorno -> . BACK NUMERO_ENTERO
    (24) retorno -> . BACK NUMERO_REAL
    (25) retorno -> . BACK CADENA
    (26) retorno -> . VARIABLE
    (27) retorno -> . NUMERO_ENTERO
    (28) retorno -> . NUMERO_REAL
    (29) retorno -> . CADENA
    (30) retorno -> . VARIABLE VARIABLE
    (31) retorno -> . VARIABLE NUMERO_ENTERO
    (32) retorno -> . VARIABLE NUMERO_REAL
    (33) retorno -> . VARIABLE CADENA
    (102) empty -> .
    (112) asignacion -> . asignacionint
    (113) asignacion -> . asignacionreal
    (114) asignacion -> . asignacioncad
    (115) asignacion -> . asignacionvar
    (110) salidadatos -> . OUT expresioncad
    (111) salidadatos -> . VARIABLE expresioncad
    (124) declaracion -> . declaracionint
    (125) declaracion -> . declaracionreal
    (126) declaracion -> . declaracioncad
    (14) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (15) iniciofuncion -> . tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (16) iniciofuncion -> . VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (17) iniciofuncion -> . FUN tdadef VARIABLE AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1
    (18) iniciofuncion -> . FUN tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2
    (67) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (68) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (69) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (70) estructuradesicion -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (71) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (72) estructuradesicion -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (73) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (74) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (75) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (76) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (77) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2
    (78) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (79) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> . IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque
    (62) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (63) estructuraiteracion1 -> . AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (64) estructuraiteracion1 -> . VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2
    (65) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2
    (66) estructuraiteracion1 -> . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque
    (55) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (56) estructuraiteracion2 -> . AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (57) estructuraiteracion2 -> . VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (58) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (59) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (60) estructuraiteracion2 -> . DO bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (61) estructuraiteracion2 -> . DO AGRUPACION_BLOQUE_EC1 bloque DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2
    (118) asignacionint -> . VARIABLE ASIGNACION_VALORES expresionint
    (119) asignacionint -> . VARIABLE ASIGNACION_VALORES lecturadatos
    (120) asignacionreal -> . VARIABLE ASIGNACION_VALORES expresionreal
    (121) asignacioncad -> . VARIABLE ASIGNACION_VALORES expresioncad
    (116) asignacionvar -> . VARIABLE ASIGNACION_VALORES expresionvar
    (117) asignacionvar -> . VARIABLE ASIGNACION_VALORES llamadafuncion
    (127) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionint
    (128) declaracionint -> . INT VARIABLE ASIGNACION_VALORES expresionvar
    (129) declaracionint -> . INT VARIABLE ASIGNACION_VALORES lecturadatos
    (130) declaracionint -> . INT VARIABLE ASIGNACION_VALORES llamadafuncion
    (131) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionint
    (132) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionvar
    (133) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos
    (134) declaracionint -> . VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion
    (135) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionreal
    (136) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES expresionvar
    (137) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES lecturadatos
    (138) declaracionreal -> . REAL VARIABLE ASIGNACION_VALORES llamadafuncion
    (139) declaracionreal -> . VARIABLE VARIABLE ASIGNACION_VALORES expresionreal
    (140) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresioncad
    (141) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES expresionvar
    (142) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES lecturadatos
    (143) declaracioncad -> . CAD VARIABLE ASIGNACION_VALORES llamadafuncion
    (144) declaracioncad -> . VARIABLE VARIABLE ASIGNACION_VALORES expresioncad
    (48) tdadef -> . INT
    (49) tdadef -> . REAL
    (50) tdadef -> . CAD
    (51) tdadef -> . NULL

    BACK            shift and go to state 23
    VARIABLE        shift and go to state 67
    NUMERO_ENTERO   shift and go to state 24
    NUMERO_REAL     shift and go to state 25
    CADENA          shift and go to state 26
    FIN             reduce using rule 102 (empty -> .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 102 (empty -> .)
    OUT             shift and go to state 31
    FUN             shift and go to state 35
    IF              shift and go to state 39
    AGRUPACION_EC1  shift and go to state 37
    DURING          shift and go to state 40
    DO              shift and go to state 41
    AGRUPACION_BLOQUE_EC1 shift and go to state 38
    INT             shift and go to state 42
    REAL            shift and go to state 43
    CAD             shift and go to state 44
    NULL            shift and go to state 45

    bloque                         shift and go to state 384
    final                          shift and go to state 11
    funcion                        shift and go to state 12
    estructuracontrol              shift and go to state 13
    finvac                         shift and go to state 14
    retorno                        shift and go to state 10
    empty                          shift and go to state 15
    asignacion                     shift and go to state 16
    salidadatos                    shift and go to state 17
    declaracion                    shift and go to state 18
    iniciofuncion                  shift and go to state 19
    estructuradesicion             shift and go to state 20
    estructuraiteracion1           shift and go to state 21
    estructuraiteracion2           shift and go to state 22
    asignacionint                  shift and go to state 27
    asignacionreal                 shift and go to state 28
    asignacioncad                  shift and go to state 29
    asignacionvar                  shift and go to state 30
    declaracionint                 shift and go to state 32
    declaracionreal                shift and go to state 33
    declaracioncad                 shift and go to state 34
    tdadef                         shift and go to state 36

state 376

    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)


state 377

    (73) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 73 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)


state 378

    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2
    (80) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

  ! shift/reduce conflict for AGRUPACION_BLOQUE_EC2 resolved as shift
    AGRUPACION_BLOQUE_EC2 shift and go to state 385
    BACK            reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    VARIABLE        reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    NUMERO_ENTERO   reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    NUMERO_REAL     reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    CADENA          reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    OUT             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    FUN             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    IF              reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    AGRUPACION_EC1  reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    DURING          reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    DO              reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    INT             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    REAL            reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    CAD             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    NULL            reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    FIN             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    END             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    $end            reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)
    BUT             reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .)

  ! AGRUPACION_BLOQUE_EC2 [ reduce using rule 80 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque .) ]


state 379

    (77) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 77 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT bloque AGRUPACION_BLOQUE_EC2 .)


state 380

    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 386


state 381

    (79) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 79 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)


state 382

    (76) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 76 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)


state 383

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (70) estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

  ! reduce/reduce conflict for BACK resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_ENTERO resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NUMERO_REAL resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CADENA resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for OUT resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FUN resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for IF resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_EC1 resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DURING resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for DO resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for AGRUPACION_BLOQUE_EC1 resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for INT resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for REAL resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for CAD resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for NULL resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for FIN resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
  ! reduce/reduce conflict for END resolved using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BACK            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 70 (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)

  ! BACK            [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! VARIABLE        [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_ENTERO   [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NUMERO_REAL     [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CADENA          [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! OUT             [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FUN             [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! IF              [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_EC1  [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DURING          [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! DO              [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! AGRUPACION_BLOQUE_EC1 [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! INT             [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! REAL            [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! CAD             [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! NULL            [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! FIN             [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]
  ! END             [ reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 384

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque . AGRUPACION_BLOQUE_EC2

    AGRUPACION_BLOQUE_EC2 shift and go to state 387


state 385

    (68) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .
    (56) estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 . DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2

  ! shift/reduce conflict for DURING resolved as shift
    BACK            reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          shift and go to state 220

  ! DURING          [ reduce using rule 68 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .) ]


state 386

    (74) estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 74 (estructuradesicion -> IF AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)


state 387

    (72) estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .

    BACK            reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    VARIABLE        reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_ENTERO   reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NUMERO_REAL     reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CADENA          reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    OUT             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FUN             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    IF              reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_EC1  reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DURING          reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    DO              reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC1 reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    INT             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    REAL            reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    CAD             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    NULL            reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    FIN             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    END             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    $end            reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    AGRUPACION_BLOQUE_EC2 reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)
    BUT             reduce using rule 72 (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 7 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 7 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 7 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 7 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 7 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for REAL in state 7 resolved as shift
WARNING: shift/reduce conflict for CAD in state 7 resolved as shift
WARNING: shift/reduce conflict for NULL in state 7 resolved as shift
WARNING: shift/reduce conflict for BACK in state 7 resolved as shift
WARNING: shift/reduce conflict for OUT in state 7 resolved as shift
WARNING: shift/reduce conflict for FUN in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for DURING in state 7 resolved as shift
WARNING: shift/reduce conflict for DO in state 7 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for BACK in state 10 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 10 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 10 resolved as shift
WARNING: shift/reduce conflict for OUT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUN in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 10 resolved as shift
WARNING: shift/reduce conflict for DURING in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for REAL in state 10 resolved as shift
WARNING: shift/reduce conflict for CAD in state 10 resolved as shift
WARNING: shift/reduce conflict for NULL in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for BACK in state 11 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 11 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 11 resolved as shift
WARNING: shift/reduce conflict for OUT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUN in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 11 resolved as shift
WARNING: shift/reduce conflict for DURING in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for REAL in state 11 resolved as shift
WARNING: shift/reduce conflict for CAD in state 11 resolved as shift
WARNING: shift/reduce conflict for NULL in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 12 resolved as shift
WARNING: shift/reduce conflict for BACK in state 12 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 12 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 12 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 12 resolved as shift
WARNING: shift/reduce conflict for OUT in state 12 resolved as shift
WARNING: shift/reduce conflict for FUN in state 12 resolved as shift
WARNING: shift/reduce conflict for IF in state 12 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 12 resolved as shift
WARNING: shift/reduce conflict for DURING in state 12 resolved as shift
WARNING: shift/reduce conflict for DO in state 12 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 12 resolved as shift
WARNING: shift/reduce conflict for REAL in state 12 resolved as shift
WARNING: shift/reduce conflict for CAD in state 12 resolved as shift
WARNING: shift/reduce conflict for NULL in state 12 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 13 resolved as shift
WARNING: shift/reduce conflict for BACK in state 13 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 13 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 13 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 13 resolved as shift
WARNING: shift/reduce conflict for OUT in state 13 resolved as shift
WARNING: shift/reduce conflict for FUN in state 13 resolved as shift
WARNING: shift/reduce conflict for IF in state 13 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 13 resolved as shift
WARNING: shift/reduce conflict for DURING in state 13 resolved as shift
WARNING: shift/reduce conflict for DO in state 13 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 13 resolved as shift
WARNING: shift/reduce conflict for INT in state 13 resolved as shift
WARNING: shift/reduce conflict for REAL in state 13 resolved as shift
WARNING: shift/reduce conflict for CAD in state 13 resolved as shift
WARNING: shift/reduce conflict for NULL in state 13 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 14 resolved as shift
WARNING: shift/reduce conflict for BACK in state 14 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 14 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 14 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 14 resolved as shift
WARNING: shift/reduce conflict for OUT in state 14 resolved as shift
WARNING: shift/reduce conflict for FUN in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 14 resolved as shift
WARNING: shift/reduce conflict for DURING in state 14 resolved as shift
WARNING: shift/reduce conflict for DO in state 14 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 14 resolved as shift
WARNING: shift/reduce conflict for INT in state 14 resolved as shift
WARNING: shift/reduce conflict for REAL in state 14 resolved as shift
WARNING: shift/reduce conflict for CAD in state 14 resolved as shift
WARNING: shift/reduce conflict for NULL in state 14 resolved as shift
WARNING: shift/reduce conflict for FIN in state 15 resolved as shift
WARNING: shift/reduce conflict for FIN in state 16 resolved as shift
WARNING: shift/reduce conflict for FIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FIN in state 18 resolved as shift
WARNING: shift/reduce conflict for BACK in state 19 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 19 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 19 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 19 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 19 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 47 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 47 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 47 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for REAL in state 47 resolved as shift
WARNING: shift/reduce conflict for CAD in state 47 resolved as shift
WARNING: shift/reduce conflict for NULL in state 47 resolved as shift
WARNING: shift/reduce conflict for BACK in state 47 resolved as shift
WARNING: shift/reduce conflict for OUT in state 47 resolved as shift
WARNING: shift/reduce conflict for FUN in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for DURING in state 47 resolved as shift
WARNING: shift/reduce conflict for DO in state 47 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 51 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 51 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 51 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 51 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 51 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 51 resolved as shift
WARNING: shift/reduce conflict for INT in state 51 resolved as shift
WARNING: shift/reduce conflict for REAL in state 51 resolved as shift
WARNING: shift/reduce conflict for CAD in state 51 resolved as shift
WARNING: shift/reduce conflict for NULL in state 51 resolved as shift
WARNING: shift/reduce conflict for BACK in state 51 resolved as shift
WARNING: shift/reduce conflict for OUT in state 51 resolved as shift
WARNING: shift/reduce conflict for FUN in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for DURING in state 51 resolved as shift
WARNING: shift/reduce conflict for DO in state 51 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 67 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 67 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 67 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for REAL in state 67 resolved as shift
WARNING: shift/reduce conflict for CAD in state 67 resolved as shift
WARNING: shift/reduce conflict for NULL in state 67 resolved as shift
WARNING: shift/reduce conflict for DURING in state 100 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 105 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 105 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 105 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 105 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 105 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 105 resolved as shift
WARNING: shift/reduce conflict for INT in state 105 resolved as shift
WARNING: shift/reduce conflict for REAL in state 105 resolved as shift
WARNING: shift/reduce conflict for CAD in state 105 resolved as shift
WARNING: shift/reduce conflict for NULL in state 105 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 115 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 115 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC2 in state 138 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 139 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 139 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 139 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 139 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 165 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 165 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 284 resolved as shift
WARNING: shift/reduce conflict for BACK in state 284 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 284 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 284 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 284 resolved as shift
WARNING: shift/reduce conflict for OUT in state 284 resolved as shift
WARNING: shift/reduce conflict for FUN in state 284 resolved as shift
WARNING: shift/reduce conflict for IF in state 284 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 284 resolved as shift
WARNING: shift/reduce conflict for DURING in state 284 resolved as shift
WARNING: shift/reduce conflict for DO in state 284 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 284 resolved as shift
WARNING: shift/reduce conflict for INT in state 284 resolved as shift
WARNING: shift/reduce conflict for REAL in state 284 resolved as shift
WARNING: shift/reduce conflict for CAD in state 284 resolved as shift
WARNING: shift/reduce conflict for NULL in state 284 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 286 resolved as shift
WARNING: shift/reduce conflict for BACK in state 286 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 286 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 286 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 286 resolved as shift
WARNING: shift/reduce conflict for OUT in state 286 resolved as shift
WARNING: shift/reduce conflict for FUN in state 286 resolved as shift
WARNING: shift/reduce conflict for IF in state 286 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 286 resolved as shift
WARNING: shift/reduce conflict for DURING in state 286 resolved as shift
WARNING: shift/reduce conflict for DO in state 286 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 286 resolved as shift
WARNING: shift/reduce conflict for INT in state 286 resolved as shift
WARNING: shift/reduce conflict for REAL in state 286 resolved as shift
WARNING: shift/reduce conflict for CAD in state 286 resolved as shift
WARNING: shift/reduce conflict for NULL in state 286 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 311 resolved as shift
WARNING: shift/reduce conflict for BUT in state 316 resolved as shift
WARNING: shift/reduce conflict for BUT in state 316 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC2 in state 320 resolved as shift
WARNING: shift/reduce conflict for BUT in state 320 resolved as shift
WARNING: shift/reduce conflict for BUT in state 321 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC2 in state 322 resolved as shift
WARNING: shift/reduce conflict for BUT in state 341 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 341 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 341 resolved as shift
WARNING: shift/reduce conflict for DURING in state 341 resolved as shift
WARNING: shift/reduce conflict for DURING in state 344 resolved as shift
WARNING: shift/reduce conflict for BUT in state 353 resolved as shift
WARNING: shift/reduce conflict for BUT in state 353 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 369 resolved as shift
WARNING: shift/reduce conflict for BACK in state 369 resolved as shift
WARNING: shift/reduce conflict for NUMERO_ENTERO in state 369 resolved as shift
WARNING: shift/reduce conflict for NUMERO_REAL in state 369 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 369 resolved as shift
WARNING: shift/reduce conflict for OUT in state 369 resolved as shift
WARNING: shift/reduce conflict for FUN in state 369 resolved as shift
WARNING: shift/reduce conflict for IF in state 369 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_EC1 in state 369 resolved as shift
WARNING: shift/reduce conflict for DURING in state 369 resolved as shift
WARNING: shift/reduce conflict for DO in state 369 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC1 in state 369 resolved as shift
WARNING: shift/reduce conflict for INT in state 369 resolved as shift
WARNING: shift/reduce conflict for REAL in state 369 resolved as shift
WARNING: shift/reduce conflict for CAD in state 369 resolved as shift
WARNING: shift/reduce conflict for NULL in state 369 resolved as shift
WARNING: shift/reduce conflict for AGRUPACION_BLOQUE_EC2 in state 378 resolved as shift
WARNING: shift/reduce conflict for DURING in state 385 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (retorno -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 47 resolved using rule (retorno -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 47
WARNING: reduce/reduce conflict in state 51 resolved using rule (retorno -> VARIABLE)
WARNING: rejected rule (retorno -> VARIABLE VARIABLE) in state 51
WARNING: reduce/reduce conflict in state 51 resolved using rule (retorno -> VARIABLE)
WARNING: rejected rule (empty -> <empty>) in state 51
WARNING: reduce/reduce conflict in state 54 resolved using rule (retorno -> NUMERO_ENTERO)
WARNING: rejected rule (retorno -> VARIABLE NUMERO_ENTERO) in state 54
WARNING: reduce/reduce conflict in state 55 resolved using rule (retorno -> NUMERO_REAL)
WARNING: rejected rule (retorno -> VARIABLE NUMERO_REAL) in state 55
WARNING: reduce/reduce conflict in state 56 resolved using rule (retorno -> VARIABLE CADENA)
WARNING: rejected rule (expresioncad -> CADENA) in state 56
WARNING: reduce/reduce conflict in state 56 resolved using rule (retorno -> CADENA)
WARNING: rejected rule (retorno -> VARIABLE CADENA) in state 56
WARNING: reduce/reduce conflict in state 105 resolved using rule (retorno -> VARIABLE)
WARNING: rejected rule (retorno -> VARIABLE VARIABLE) in state 105
WARNING: reduce/reduce conflict in state 110 resolved using rule (conjinstrucciones -> bloque END)
WARNING: rejected rule (conjinstrucciones -> VARIABLE bloque END) in state 110
WARNING: reduce/reduce conflict in state 129 resolved using rule (conjinstrucciones -> BEGIN retorno bloque)
WARNING: rejected rule (bloque -> retorno bloque) in state 129
WARNING: reduce/reduce conflict in state 133 resolved using rule (retorno -> VARIABLE CADENA)
WARNING: rejected rule (expresioncad -> CADENA) in state 133
WARNING: reduce/reduce conflict in state 166 resolved using rule (asignacionint -> VARIABLE ASIGNACION_VALORES expresionint)
WARNING: rejected rule (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionint) in state 166
WARNING: reduce/reduce conflict in state 167 resolved using rule (asignacionvar -> VARIABLE ASIGNACION_VALORES expresionvar)
WARNING: rejected rule (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES expresionvar) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (asignacionint -> VARIABLE ASIGNACION_VALORES lecturadatos)
WARNING: rejected rule (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES lecturadatos) in state 168
WARNING: reduce/reduce conflict in state 169 resolved using rule (asignacionvar -> VARIABLE ASIGNACION_VALORES llamadafuncion)
WARNING: rejected rule (declaracionint -> VARIABLE VARIABLE ASIGNACION_VALORES llamadafuncion) in state 169
WARNING: reduce/reduce conflict in state 170 resolved using rule (asignacionreal -> VARIABLE ASIGNACION_VALORES expresionreal)
WARNING: rejected rule (declaracionreal -> VARIABLE VARIABLE ASIGNACION_VALORES expresionreal) in state 170
WARNING: reduce/reduce conflict in state 171 resolved using rule (asignacioncad -> VARIABLE ASIGNACION_VALORES expresioncad)
WARNING: rejected rule (declaracioncad -> VARIABLE VARIABLE ASIGNACION_VALORES expresioncad) in state 171
WARNING: reduce/reduce conflict in state 194 resolved using rule (entrada -> NUMERO_ENTERO)
WARNING: rejected rule (expresionint -> NUMERO_ENTERO) in state 194
WARNING: reduce/reduce conflict in state 195 resolved using rule (entrada -> VARIABLE)
WARNING: rejected rule (expresionvar -> VARIABLE) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (entrada -> NUMERO_REAL)
WARNING: rejected rule (expresionreal -> NUMERO_REAL) in state 196
WARNING: reduce/reduce conflict in state 316 resolved using rule (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2)
WARNING: rejected rule (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) in state 316
WARNING: reduce/reduce conflict in state 329 resolved using rule (iniciofuncion -> tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1)
WARNING: rejected rule (iniciofuncion -> VARIABLE tdadef FUNCTION_NAME AGRUPACION_EC1 parametrosfun AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1) in state 329
WARNING: reduce/reduce conflict in state 330 resolved using rule (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2)
WARNING: rejected rule (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) in state 330
WARNING: reduce/reduce conflict in state 330 resolved using rule (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2)
WARNING: rejected rule (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) in state 330
WARNING: reduce/reduce conflict in state 330 resolved using rule (estructuraiteracion1 -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2)
WARNING: rejected rule (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) in state 330
WARNING: reduce/reduce conflict in state 351 resolved using rule (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2)
WARNING: rejected rule (estructuraiteracion2 -> VARIABLE AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2) in state 351
WARNING: reduce/reduce conflict in state 353 resolved using rule (estructuraiteracion1 -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2)
WARNING: rejected rule (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) in state 353
WARNING: reduce/reduce conflict in state 362 resolved using rule (estructuraiteracion2 -> DO AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2)
WARNING: rejected rule (estructuraiteracion2 -> AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 DURING AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2) in state 362
WARNING: reduce/reduce conflict in state 383 resolved using rule (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2)
WARNING: rejected rule (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2 BUT AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) in state 383
WARNING: Rule (estructuradesicion -> AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) is never reduced
WARNING: Rule (estructuradesicion -> VARIABLE AGRUPACION_EC1 parametroscontrol AGRUPACION_EC2 AGRUPACION_BLOQUE_EC1 bloque AGRUPACION_BLOQUE_EC2) is never reduced
